// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.rancher2.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.rancher2.inputs.ClusterAksConfigV2NodePoolArgs;
import java.lang.Boolean;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ClusterAksConfigV2Args extends com.pulumi.resources.ResourceArgs {

    public static final ClusterAksConfigV2Args Empty = new ClusterAksConfigV2Args();

    /**
     * Different authentication API url to use. Default `https://login.microsoftonline.com/` (string)
     * 
     */
    @Import(name="authBaseUrl")
    private @Nullable Output<String> authBaseUrl;

    /**
     * @return Different authentication API url to use. Default `https://login.microsoftonline.com/` (string)
     * 
     */
    public Optional<Output<String>> authBaseUrl() {
        return Optional.ofNullable(this.authBaseUrl);
    }

    /**
     * The AKS authorized ip ranges (list)
     * 
     */
    @Import(name="authorizedIpRanges")
    private @Nullable Output<List<String>> authorizedIpRanges;

    /**
     * @return The AKS authorized ip ranges (list)
     * 
     */
    public Optional<Output<List<String>>> authorizedIpRanges() {
        return Optional.ofNullable(this.authorizedIpRanges);
    }

    /**
     * Different resource management API url to use. Default `https://management.azure.com/` (string)
     * 
     */
    @Import(name="baseUrl")
    private @Nullable Output<String> baseUrl;

    /**
     * @return Different resource management API url to use. Default `https://management.azure.com/` (string)
     * 
     */
    public Optional<Output<String>> baseUrl() {
        return Optional.ofNullable(this.baseUrl);
    }

    /**
     * The AKS Cloud Credential ID to use (string)
     * 
     */
    @Import(name="cloudCredentialId", required=true)
    private Output<String> cloudCredentialId;

    /**
     * @return The AKS Cloud Credential ID to use (string)
     * 
     */
    public Output<String> cloudCredentialId() {
        return this.cloudCredentialId;
    }

    /**
     * The AKS dns prefix. Required if `imported=false` (string)
     * 
     */
    @Import(name="dnsPrefix")
    private @Nullable Output<String> dnsPrefix;

    /**
     * @return The AKS dns prefix. Required if `imported=false` (string)
     * 
     */
    public Optional<Output<String>> dnsPrefix() {
        return Optional.ofNullable(this.dnsPrefix);
    }

    /**
     * Enable AKS http application routing? (bool)
     * 
     */
    @Import(name="httpApplicationRouting")
    private @Nullable Output<Boolean> httpApplicationRouting;

    /**
     * @return Enable AKS http application routing? (bool)
     * 
     */
    public Optional<Output<Boolean>> httpApplicationRouting() {
        return Optional.ofNullable(this.httpApplicationRouting);
    }

    /**
     * Is AKS cluster imported? Defaul: `false` (bool)
     * 
     * The following arguments are supported just for creating new AKS clusters (`imported=false`):
     * 
     */
    @Import(name="imported")
    private @Nullable Output<Boolean> imported;

    /**
     * @return Is AKS cluster imported? Defaul: `false` (bool)
     * 
     * The following arguments are supported just for creating new AKS clusters (`imported=false`):
     * 
     */
    public Optional<Output<Boolean>> imported() {
        return Optional.ofNullable(this.imported);
    }

    /**
     * K8s version to deploy. Default: `Rancher default` (string) (Note - if rke_config is set at cluster_template, kubernetes_version must be set to the active cluster version so Rancher can clone the RKE template)
     * 
     */
    @Import(name="kubernetesVersion")
    private @Nullable Output<String> kubernetesVersion;

    /**
     * @return K8s version to deploy. Default: `Rancher default` (string) (Note - if rke_config is set at cluster_template, kubernetes_version must be set to the active cluster version so Rancher can clone the RKE template)
     * 
     */
    public Optional<Output<String>> kubernetesVersion() {
        return Optional.ofNullable(this.kubernetesVersion);
    }

    /**
     * The AKS linux admin username (string)
     * 
     */
    @Import(name="linuxAdminUsername")
    private @Nullable Output<String> linuxAdminUsername;

    /**
     * @return The AKS linux admin username (string)
     * 
     */
    public Optional<Output<String>> linuxAdminUsername() {
        return Optional.ofNullable(this.linuxAdminUsername);
    }

    /**
     * The AKS linux ssh public key (string)
     * 
     */
    @Import(name="linuxSshPublicKey")
    private @Nullable Output<String> linuxSshPublicKey;

    /**
     * @return The AKS linux ssh public key (string)
     * 
     */
    public Optional<Output<String>> linuxSshPublicKey() {
        return Optional.ofNullable(this.linuxSshPublicKey);
    }

    /**
     * Allowed values: `basic` (default) `standard` (string)
     * 
     */
    @Import(name="loadBalancerSku")
    private @Nullable Output<String> loadBalancerSku;

    /**
     * @return Allowed values: `basic` (default) `standard` (string)
     * 
     */
    public Optional<Output<String>> loadBalancerSku() {
        return Optional.ofNullable(this.loadBalancerSku);
    }

    /**
     * The AKS log analytics workspace group (string)
     * 
     */
    @Import(name="logAnalyticsWorkspaceGroup")
    private @Nullable Output<String> logAnalyticsWorkspaceGroup;

    /**
     * @return The AKS log analytics workspace group (string)
     * 
     */
    public Optional<Output<String>> logAnalyticsWorkspaceGroup() {
        return Optional.ofNullable(this.logAnalyticsWorkspaceGroup);
    }

    /**
     * The AKS log analytics workspace name (string)
     * 
     */
    @Import(name="logAnalyticsWorkspaceName")
    private @Nullable Output<String> logAnalyticsWorkspaceName;

    /**
     * @return The AKS log analytics workspace name (string)
     * 
     */
    public Optional<Output<String>> logAnalyticsWorkspaceName() {
        return Optional.ofNullable(this.logAnalyticsWorkspaceName);
    }

    /**
     * Kubernetes cluster monitoring (list maxitems:1)
     * 
     */
    @Import(name="monitoring")
    private @Nullable Output<Boolean> monitoring;

    /**
     * @return Kubernetes cluster monitoring (list maxitems:1)
     * 
     */
    public Optional<Output<Boolean>> monitoring() {
        return Optional.ofNullable(this.monitoring);
    }

    /**
     * The name of the Cluster (string)
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the Cluster (string)
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The AKS network dns service ip (string)
     * 
     */
    @Import(name="networkDnsServiceIp")
    private @Nullable Output<String> networkDnsServiceIp;

    /**
     * @return The AKS network dns service ip (string)
     * 
     */
    public Optional<Output<String>> networkDnsServiceIp() {
        return Optional.ofNullable(this.networkDnsServiceIp);
    }

    /**
     * The AKS network docker bridge cidr (string)
     * 
     */
    @Import(name="networkDockerBridgeCidr")
    private @Nullable Output<String> networkDockerBridgeCidr;

    /**
     * @return The AKS network docker bridge cidr (string)
     * 
     */
    public Optional<Output<String>> networkDockerBridgeCidr() {
        return Optional.ofNullable(this.networkDockerBridgeCidr);
    }

    /**
     * Network plugin used for building Kubernetes network. Chooses from `azure` or `kubenet`. Default `azure` (string)
     * 
     */
    @Import(name="networkPlugin")
    private @Nullable Output<String> networkPlugin;

    /**
     * @return Network plugin used for building Kubernetes network. Chooses from `azure` or `kubenet`. Default `azure` (string)
     * 
     */
    public Optional<Output<String>> networkPlugin() {
        return Optional.ofNullable(this.networkPlugin);
    }

    /**
     * The AKS network pod cidr (string)
     * 
     */
    @Import(name="networkPodCidr")
    private @Nullable Output<String> networkPodCidr;

    /**
     * @return The AKS network pod cidr (string)
     * 
     */
    public Optional<Output<String>> networkPodCidr() {
        return Optional.ofNullable(this.networkPodCidr);
    }

    /**
     * Network policy used for building Kubernetes network. Chooses from `calico` (string)
     * 
     */
    @Import(name="networkPolicy")
    private @Nullable Output<String> networkPolicy;

    /**
     * @return Network policy used for building Kubernetes network. Chooses from `calico` (string)
     * 
     */
    public Optional<Output<String>> networkPolicy() {
        return Optional.ofNullable(this.networkPolicy);
    }

    /**
     * The AKS network service cidr (string)
     * 
     */
    @Import(name="networkServiceCidr")
    private @Nullable Output<String> networkServiceCidr;

    /**
     * @return The AKS network service cidr (string)
     * 
     */
    public Optional<Output<String>> networkServiceCidr() {
        return Optional.ofNullable(this.networkServiceCidr);
    }

    /**
     * The AKS nnode pools. Required if `imported=false` (list)
     * 
     */
    @Import(name="nodePools")
    private @Nullable Output<List<ClusterAksConfigV2NodePoolArgs>> nodePools;

    /**
     * @return The AKS nnode pools. Required if `imported=false` (list)
     * 
     */
    public Optional<Output<List<ClusterAksConfigV2NodePoolArgs>>> nodePools() {
        return Optional.ofNullable(this.nodePools);
    }

    /**
     * Is AKS cluster private? (bool)
     * 
     */
    @Import(name="privateCluster")
    private @Nullable Output<Boolean> privateCluster;

    /**
     * @return Is AKS cluster private? (bool)
     * 
     */
    public Optional<Output<Boolean>> privateCluster() {
        return Optional.ofNullable(this.privateCluster);
    }

    /**
     * (string)
     * 
     */
    @Import(name="resourceGroup", required=true)
    private Output<String> resourceGroup;

    /**
     * @return (string)
     * 
     */
    public Output<String> resourceGroup() {
        return this.resourceGroup;
    }

    /**
     * The AKS resource location (string)
     * 
     */
    @Import(name="resourceLocation", required=true)
    private Output<String> resourceLocation;

    /**
     * @return The AKS resource location (string)
     * 
     */
    public Output<String> resourceLocation() {
        return this.resourceLocation;
    }

    /**
     * The name of an existing Azure Virtual Subnet. Composite of agent virtual network subnet ID (string)
     * 
     */
    @Import(name="subnet")
    private @Nullable Output<String> subnet;

    /**
     * @return The name of an existing Azure Virtual Subnet. Composite of agent virtual network subnet ID (string)
     * 
     */
    public Optional<Output<String>> subnet() {
        return Optional.ofNullable(this.subnet);
    }

    /**
     * Tags for Kubernetes cluster. For example, `[&#34;foo=bar&#34;,&#34;bar=foo&#34;]` (list)
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,Object>> tags;

    /**
     * @return Tags for Kubernetes cluster. For example, `[&#34;foo=bar&#34;,&#34;bar=foo&#34;]` (list)
     * 
     */
    public Optional<Output<Map<String,Object>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * The name of an existing Azure Virtual Network. Composite of agent virtual network subnet ID (string)
     * 
     */
    @Import(name="virtualNetwork")
    private @Nullable Output<String> virtualNetwork;

    /**
     * @return The name of an existing Azure Virtual Network. Composite of agent virtual network subnet ID (string)
     * 
     */
    public Optional<Output<String>> virtualNetwork() {
        return Optional.ofNullable(this.virtualNetwork);
    }

    /**
     * The resource group of an existing Azure Virtual Network. Composite of agent virtual network subnet ID (string)
     * 
     */
    @Import(name="virtualNetworkResourceGroup")
    private @Nullable Output<String> virtualNetworkResourceGroup;

    /**
     * @return The resource group of an existing Azure Virtual Network. Composite of agent virtual network subnet ID (string)
     * 
     */
    public Optional<Output<String>> virtualNetworkResourceGroup() {
        return Optional.ofNullable(this.virtualNetworkResourceGroup);
    }

    private ClusterAksConfigV2Args() {}

    private ClusterAksConfigV2Args(ClusterAksConfigV2Args $) {
        this.authBaseUrl = $.authBaseUrl;
        this.authorizedIpRanges = $.authorizedIpRanges;
        this.baseUrl = $.baseUrl;
        this.cloudCredentialId = $.cloudCredentialId;
        this.dnsPrefix = $.dnsPrefix;
        this.httpApplicationRouting = $.httpApplicationRouting;
        this.imported = $.imported;
        this.kubernetesVersion = $.kubernetesVersion;
        this.linuxAdminUsername = $.linuxAdminUsername;
        this.linuxSshPublicKey = $.linuxSshPublicKey;
        this.loadBalancerSku = $.loadBalancerSku;
        this.logAnalyticsWorkspaceGroup = $.logAnalyticsWorkspaceGroup;
        this.logAnalyticsWorkspaceName = $.logAnalyticsWorkspaceName;
        this.monitoring = $.monitoring;
        this.name = $.name;
        this.networkDnsServiceIp = $.networkDnsServiceIp;
        this.networkDockerBridgeCidr = $.networkDockerBridgeCidr;
        this.networkPlugin = $.networkPlugin;
        this.networkPodCidr = $.networkPodCidr;
        this.networkPolicy = $.networkPolicy;
        this.networkServiceCidr = $.networkServiceCidr;
        this.nodePools = $.nodePools;
        this.privateCluster = $.privateCluster;
        this.resourceGroup = $.resourceGroup;
        this.resourceLocation = $.resourceLocation;
        this.subnet = $.subnet;
        this.tags = $.tags;
        this.virtualNetwork = $.virtualNetwork;
        this.virtualNetworkResourceGroup = $.virtualNetworkResourceGroup;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ClusterAksConfigV2Args defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ClusterAksConfigV2Args $;

        public Builder() {
            $ = new ClusterAksConfigV2Args();
        }

        public Builder(ClusterAksConfigV2Args defaults) {
            $ = new ClusterAksConfigV2Args(Objects.requireNonNull(defaults));
        }

        /**
         * @param authBaseUrl Different authentication API url to use. Default `https://login.microsoftonline.com/` (string)
         * 
         * @return builder
         * 
         */
        public Builder authBaseUrl(@Nullable Output<String> authBaseUrl) {
            $.authBaseUrl = authBaseUrl;
            return this;
        }

        /**
         * @param authBaseUrl Different authentication API url to use. Default `https://login.microsoftonline.com/` (string)
         * 
         * @return builder
         * 
         */
        public Builder authBaseUrl(String authBaseUrl) {
            return authBaseUrl(Output.of(authBaseUrl));
        }

        /**
         * @param authorizedIpRanges The AKS authorized ip ranges (list)
         * 
         * @return builder
         * 
         */
        public Builder authorizedIpRanges(@Nullable Output<List<String>> authorizedIpRanges) {
            $.authorizedIpRanges = authorizedIpRanges;
            return this;
        }

        /**
         * @param authorizedIpRanges The AKS authorized ip ranges (list)
         * 
         * @return builder
         * 
         */
        public Builder authorizedIpRanges(List<String> authorizedIpRanges) {
            return authorizedIpRanges(Output.of(authorizedIpRanges));
        }

        /**
         * @param authorizedIpRanges The AKS authorized ip ranges (list)
         * 
         * @return builder
         * 
         */
        public Builder authorizedIpRanges(String... authorizedIpRanges) {
            return authorizedIpRanges(List.of(authorizedIpRanges));
        }

        /**
         * @param baseUrl Different resource management API url to use. Default `https://management.azure.com/` (string)
         * 
         * @return builder
         * 
         */
        public Builder baseUrl(@Nullable Output<String> baseUrl) {
            $.baseUrl = baseUrl;
            return this;
        }

        /**
         * @param baseUrl Different resource management API url to use. Default `https://management.azure.com/` (string)
         * 
         * @return builder
         * 
         */
        public Builder baseUrl(String baseUrl) {
            return baseUrl(Output.of(baseUrl));
        }

        /**
         * @param cloudCredentialId The AKS Cloud Credential ID to use (string)
         * 
         * @return builder
         * 
         */
        public Builder cloudCredentialId(Output<String> cloudCredentialId) {
            $.cloudCredentialId = cloudCredentialId;
            return this;
        }

        /**
         * @param cloudCredentialId The AKS Cloud Credential ID to use (string)
         * 
         * @return builder
         * 
         */
        public Builder cloudCredentialId(String cloudCredentialId) {
            return cloudCredentialId(Output.of(cloudCredentialId));
        }

        /**
         * @param dnsPrefix The AKS dns prefix. Required if `imported=false` (string)
         * 
         * @return builder
         * 
         */
        public Builder dnsPrefix(@Nullable Output<String> dnsPrefix) {
            $.dnsPrefix = dnsPrefix;
            return this;
        }

        /**
         * @param dnsPrefix The AKS dns prefix. Required if `imported=false` (string)
         * 
         * @return builder
         * 
         */
        public Builder dnsPrefix(String dnsPrefix) {
            return dnsPrefix(Output.of(dnsPrefix));
        }

        /**
         * @param httpApplicationRouting Enable AKS http application routing? (bool)
         * 
         * @return builder
         * 
         */
        public Builder httpApplicationRouting(@Nullable Output<Boolean> httpApplicationRouting) {
            $.httpApplicationRouting = httpApplicationRouting;
            return this;
        }

        /**
         * @param httpApplicationRouting Enable AKS http application routing? (bool)
         * 
         * @return builder
         * 
         */
        public Builder httpApplicationRouting(Boolean httpApplicationRouting) {
            return httpApplicationRouting(Output.of(httpApplicationRouting));
        }

        /**
         * @param imported Is AKS cluster imported? Defaul: `false` (bool)
         * 
         * The following arguments are supported just for creating new AKS clusters (`imported=false`):
         * 
         * @return builder
         * 
         */
        public Builder imported(@Nullable Output<Boolean> imported) {
            $.imported = imported;
            return this;
        }

        /**
         * @param imported Is AKS cluster imported? Defaul: `false` (bool)
         * 
         * The following arguments are supported just for creating new AKS clusters (`imported=false`):
         * 
         * @return builder
         * 
         */
        public Builder imported(Boolean imported) {
            return imported(Output.of(imported));
        }

        /**
         * @param kubernetesVersion K8s version to deploy. Default: `Rancher default` (string) (Note - if rke_config is set at cluster_template, kubernetes_version must be set to the active cluster version so Rancher can clone the RKE template)
         * 
         * @return builder
         * 
         */
        public Builder kubernetesVersion(@Nullable Output<String> kubernetesVersion) {
            $.kubernetesVersion = kubernetesVersion;
            return this;
        }

        /**
         * @param kubernetesVersion K8s version to deploy. Default: `Rancher default` (string) (Note - if rke_config is set at cluster_template, kubernetes_version must be set to the active cluster version so Rancher can clone the RKE template)
         * 
         * @return builder
         * 
         */
        public Builder kubernetesVersion(String kubernetesVersion) {
            return kubernetesVersion(Output.of(kubernetesVersion));
        }

        /**
         * @param linuxAdminUsername The AKS linux admin username (string)
         * 
         * @return builder
         * 
         */
        public Builder linuxAdminUsername(@Nullable Output<String> linuxAdminUsername) {
            $.linuxAdminUsername = linuxAdminUsername;
            return this;
        }

        /**
         * @param linuxAdminUsername The AKS linux admin username (string)
         * 
         * @return builder
         * 
         */
        public Builder linuxAdminUsername(String linuxAdminUsername) {
            return linuxAdminUsername(Output.of(linuxAdminUsername));
        }

        /**
         * @param linuxSshPublicKey The AKS linux ssh public key (string)
         * 
         * @return builder
         * 
         */
        public Builder linuxSshPublicKey(@Nullable Output<String> linuxSshPublicKey) {
            $.linuxSshPublicKey = linuxSshPublicKey;
            return this;
        }

        /**
         * @param linuxSshPublicKey The AKS linux ssh public key (string)
         * 
         * @return builder
         * 
         */
        public Builder linuxSshPublicKey(String linuxSshPublicKey) {
            return linuxSshPublicKey(Output.of(linuxSshPublicKey));
        }

        /**
         * @param loadBalancerSku Allowed values: `basic` (default) `standard` (string)
         * 
         * @return builder
         * 
         */
        public Builder loadBalancerSku(@Nullable Output<String> loadBalancerSku) {
            $.loadBalancerSku = loadBalancerSku;
            return this;
        }

        /**
         * @param loadBalancerSku Allowed values: `basic` (default) `standard` (string)
         * 
         * @return builder
         * 
         */
        public Builder loadBalancerSku(String loadBalancerSku) {
            return loadBalancerSku(Output.of(loadBalancerSku));
        }

        /**
         * @param logAnalyticsWorkspaceGroup The AKS log analytics workspace group (string)
         * 
         * @return builder
         * 
         */
        public Builder logAnalyticsWorkspaceGroup(@Nullable Output<String> logAnalyticsWorkspaceGroup) {
            $.logAnalyticsWorkspaceGroup = logAnalyticsWorkspaceGroup;
            return this;
        }

        /**
         * @param logAnalyticsWorkspaceGroup The AKS log analytics workspace group (string)
         * 
         * @return builder
         * 
         */
        public Builder logAnalyticsWorkspaceGroup(String logAnalyticsWorkspaceGroup) {
            return logAnalyticsWorkspaceGroup(Output.of(logAnalyticsWorkspaceGroup));
        }

        /**
         * @param logAnalyticsWorkspaceName The AKS log analytics workspace name (string)
         * 
         * @return builder
         * 
         */
        public Builder logAnalyticsWorkspaceName(@Nullable Output<String> logAnalyticsWorkspaceName) {
            $.logAnalyticsWorkspaceName = logAnalyticsWorkspaceName;
            return this;
        }

        /**
         * @param logAnalyticsWorkspaceName The AKS log analytics workspace name (string)
         * 
         * @return builder
         * 
         */
        public Builder logAnalyticsWorkspaceName(String logAnalyticsWorkspaceName) {
            return logAnalyticsWorkspaceName(Output.of(logAnalyticsWorkspaceName));
        }

        /**
         * @param monitoring Kubernetes cluster monitoring (list maxitems:1)
         * 
         * @return builder
         * 
         */
        public Builder monitoring(@Nullable Output<Boolean> monitoring) {
            $.monitoring = monitoring;
            return this;
        }

        /**
         * @param monitoring Kubernetes cluster monitoring (list maxitems:1)
         * 
         * @return builder
         * 
         */
        public Builder monitoring(Boolean monitoring) {
            return monitoring(Output.of(monitoring));
        }

        /**
         * @param name The name of the Cluster (string)
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the Cluster (string)
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param networkDnsServiceIp The AKS network dns service ip (string)
         * 
         * @return builder
         * 
         */
        public Builder networkDnsServiceIp(@Nullable Output<String> networkDnsServiceIp) {
            $.networkDnsServiceIp = networkDnsServiceIp;
            return this;
        }

        /**
         * @param networkDnsServiceIp The AKS network dns service ip (string)
         * 
         * @return builder
         * 
         */
        public Builder networkDnsServiceIp(String networkDnsServiceIp) {
            return networkDnsServiceIp(Output.of(networkDnsServiceIp));
        }

        /**
         * @param networkDockerBridgeCidr The AKS network docker bridge cidr (string)
         * 
         * @return builder
         * 
         */
        public Builder networkDockerBridgeCidr(@Nullable Output<String> networkDockerBridgeCidr) {
            $.networkDockerBridgeCidr = networkDockerBridgeCidr;
            return this;
        }

        /**
         * @param networkDockerBridgeCidr The AKS network docker bridge cidr (string)
         * 
         * @return builder
         * 
         */
        public Builder networkDockerBridgeCidr(String networkDockerBridgeCidr) {
            return networkDockerBridgeCidr(Output.of(networkDockerBridgeCidr));
        }

        /**
         * @param networkPlugin Network plugin used for building Kubernetes network. Chooses from `azure` or `kubenet`. Default `azure` (string)
         * 
         * @return builder
         * 
         */
        public Builder networkPlugin(@Nullable Output<String> networkPlugin) {
            $.networkPlugin = networkPlugin;
            return this;
        }

        /**
         * @param networkPlugin Network plugin used for building Kubernetes network. Chooses from `azure` or `kubenet`. Default `azure` (string)
         * 
         * @return builder
         * 
         */
        public Builder networkPlugin(String networkPlugin) {
            return networkPlugin(Output.of(networkPlugin));
        }

        /**
         * @param networkPodCidr The AKS network pod cidr (string)
         * 
         * @return builder
         * 
         */
        public Builder networkPodCidr(@Nullable Output<String> networkPodCidr) {
            $.networkPodCidr = networkPodCidr;
            return this;
        }

        /**
         * @param networkPodCidr The AKS network pod cidr (string)
         * 
         * @return builder
         * 
         */
        public Builder networkPodCidr(String networkPodCidr) {
            return networkPodCidr(Output.of(networkPodCidr));
        }

        /**
         * @param networkPolicy Network policy used for building Kubernetes network. Chooses from `calico` (string)
         * 
         * @return builder
         * 
         */
        public Builder networkPolicy(@Nullable Output<String> networkPolicy) {
            $.networkPolicy = networkPolicy;
            return this;
        }

        /**
         * @param networkPolicy Network policy used for building Kubernetes network. Chooses from `calico` (string)
         * 
         * @return builder
         * 
         */
        public Builder networkPolicy(String networkPolicy) {
            return networkPolicy(Output.of(networkPolicy));
        }

        /**
         * @param networkServiceCidr The AKS network service cidr (string)
         * 
         * @return builder
         * 
         */
        public Builder networkServiceCidr(@Nullable Output<String> networkServiceCidr) {
            $.networkServiceCidr = networkServiceCidr;
            return this;
        }

        /**
         * @param networkServiceCidr The AKS network service cidr (string)
         * 
         * @return builder
         * 
         */
        public Builder networkServiceCidr(String networkServiceCidr) {
            return networkServiceCidr(Output.of(networkServiceCidr));
        }

        /**
         * @param nodePools The AKS nnode pools. Required if `imported=false` (list)
         * 
         * @return builder
         * 
         */
        public Builder nodePools(@Nullable Output<List<ClusterAksConfigV2NodePoolArgs>> nodePools) {
            $.nodePools = nodePools;
            return this;
        }

        /**
         * @param nodePools The AKS nnode pools. Required if `imported=false` (list)
         * 
         * @return builder
         * 
         */
        public Builder nodePools(List<ClusterAksConfigV2NodePoolArgs> nodePools) {
            return nodePools(Output.of(nodePools));
        }

        /**
         * @param nodePools The AKS nnode pools. Required if `imported=false` (list)
         * 
         * @return builder
         * 
         */
        public Builder nodePools(ClusterAksConfigV2NodePoolArgs... nodePools) {
            return nodePools(List.of(nodePools));
        }

        /**
         * @param privateCluster Is AKS cluster private? (bool)
         * 
         * @return builder
         * 
         */
        public Builder privateCluster(@Nullable Output<Boolean> privateCluster) {
            $.privateCluster = privateCluster;
            return this;
        }

        /**
         * @param privateCluster Is AKS cluster private? (bool)
         * 
         * @return builder
         * 
         */
        public Builder privateCluster(Boolean privateCluster) {
            return privateCluster(Output.of(privateCluster));
        }

        /**
         * @param resourceGroup (string)
         * 
         * @return builder
         * 
         */
        public Builder resourceGroup(Output<String> resourceGroup) {
            $.resourceGroup = resourceGroup;
            return this;
        }

        /**
         * @param resourceGroup (string)
         * 
         * @return builder
         * 
         */
        public Builder resourceGroup(String resourceGroup) {
            return resourceGroup(Output.of(resourceGroup));
        }

        /**
         * @param resourceLocation The AKS resource location (string)
         * 
         * @return builder
         * 
         */
        public Builder resourceLocation(Output<String> resourceLocation) {
            $.resourceLocation = resourceLocation;
            return this;
        }

        /**
         * @param resourceLocation The AKS resource location (string)
         * 
         * @return builder
         * 
         */
        public Builder resourceLocation(String resourceLocation) {
            return resourceLocation(Output.of(resourceLocation));
        }

        /**
         * @param subnet The name of an existing Azure Virtual Subnet. Composite of agent virtual network subnet ID (string)
         * 
         * @return builder
         * 
         */
        public Builder subnet(@Nullable Output<String> subnet) {
            $.subnet = subnet;
            return this;
        }

        /**
         * @param subnet The name of an existing Azure Virtual Subnet. Composite of agent virtual network subnet ID (string)
         * 
         * @return builder
         * 
         */
        public Builder subnet(String subnet) {
            return subnet(Output.of(subnet));
        }

        /**
         * @param tags Tags for Kubernetes cluster. For example, `[&#34;foo=bar&#34;,&#34;bar=foo&#34;]` (list)
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,Object>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags Tags for Kubernetes cluster. For example, `[&#34;foo=bar&#34;,&#34;bar=foo&#34;]` (list)
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,Object> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param virtualNetwork The name of an existing Azure Virtual Network. Composite of agent virtual network subnet ID (string)
         * 
         * @return builder
         * 
         */
        public Builder virtualNetwork(@Nullable Output<String> virtualNetwork) {
            $.virtualNetwork = virtualNetwork;
            return this;
        }

        /**
         * @param virtualNetwork The name of an existing Azure Virtual Network. Composite of agent virtual network subnet ID (string)
         * 
         * @return builder
         * 
         */
        public Builder virtualNetwork(String virtualNetwork) {
            return virtualNetwork(Output.of(virtualNetwork));
        }

        /**
         * @param virtualNetworkResourceGroup The resource group of an existing Azure Virtual Network. Composite of agent virtual network subnet ID (string)
         * 
         * @return builder
         * 
         */
        public Builder virtualNetworkResourceGroup(@Nullable Output<String> virtualNetworkResourceGroup) {
            $.virtualNetworkResourceGroup = virtualNetworkResourceGroup;
            return this;
        }

        /**
         * @param virtualNetworkResourceGroup The resource group of an existing Azure Virtual Network. Composite of agent virtual network subnet ID (string)
         * 
         * @return builder
         * 
         */
        public Builder virtualNetworkResourceGroup(String virtualNetworkResourceGroup) {
            return virtualNetworkResourceGroup(Output.of(virtualNetworkResourceGroup));
        }

        public ClusterAksConfigV2Args build() {
            $.cloudCredentialId = Objects.requireNonNull($.cloudCredentialId, "expected parameter 'cloudCredentialId' to be non-null");
            $.resourceGroup = Objects.requireNonNull($.resourceGroup, "expected parameter 'resourceGroup' to be non-null");
            $.resourceLocation = Objects.requireNonNull($.resourceLocation, "expected parameter 'resourceLocation' to be non-null");
            return $;
        }
    }

}
