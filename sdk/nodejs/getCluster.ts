// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getCluster(args: GetClusterArgs, opts?: pulumi.InvokeOptions): Promise<GetClusterResult> {
    if (!opts) {
        opts = {}
    }

    if (!opts.version) {
        opts.version = utilities.getVersion();
    }
    return pulumi.runtime.invoke("rancher2:index/getCluster:getCluster", {
        "name": args.name,
    }, opts);
}

/**
 * A collection of arguments for invoking getCluster.
 */
export interface GetClusterArgs {
    readonly name: string;
}

/**
 * A collection of values returned by getCluster.
 */
export interface GetClusterResult {
    readonly aksConfig: outputs.GetClusterAksConfig;
    readonly annotations: {[key: string]: any};
    readonly clusterAuthEndpoint: outputs.GetClusterClusterAuthEndpoint;
    readonly clusterMonitoringInput: outputs.GetClusterClusterMonitoringInput;
    readonly clusterRegistrationToken: outputs.GetClusterClusterRegistrationToken;
    readonly clusterTemplateAnswers: outputs.GetClusterClusterTemplateAnswers;
    readonly clusterTemplateId: string;
    readonly clusterTemplateQuestions: outputs.GetClusterClusterTemplateQuestion[];
    readonly clusterTemplateRevisionId: string;
    readonly defaultPodSecurityPolicyTemplateId: string;
    readonly defaultProjectId: string;
    readonly description: string;
    readonly driver: string;
    readonly eksConfig: outputs.GetClusterEksConfig;
    readonly enableClusterAlerting: boolean;
    readonly enableClusterMonitoring: boolean;
    readonly enableNetworkPolicy: boolean;
    readonly gkeConfig: outputs.GetClusterGkeConfig;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly k3sConfig: outputs.GetClusterK3sConfig;
    readonly kubeConfig: string;
    readonly labels: {[key: string]: any};
    readonly name: string;
    readonly rkeConfig: outputs.GetClusterRkeConfig;
    readonly scheduledClusterScans: outputs.GetClusterScheduledClusterScan[];
    readonly systemProjectId: string;
}
