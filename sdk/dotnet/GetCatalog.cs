// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Rancher2
{
    public static class GetCatalog
    {
        public static Task<GetCatalogResult> InvokeAsync(GetCatalogArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetCatalogResult>("rancher2:index/getCatalog:getCatalog", args ?? new GetCatalogArgs(), options.WithVersion());
    }


    public sealed class GetCatalogArgs : Pulumi.InvokeArgs
    {
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        [Input("scope")]
        public string? Scope { get; set; }

        public GetCatalogArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetCatalogResult
    {
        public readonly ImmutableDictionary<string, object> Annotations;
        public readonly string Branch;
        public readonly string ClusterId;
        public readonly string Description;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string Kind;
        public readonly ImmutableDictionary<string, object> Labels;
        public readonly string Name;
        public readonly string Password;
        public readonly string ProjectId;
        public readonly string? Scope;
        public readonly string Url;
        public readonly string Username;
        public readonly string Version;

        [OutputConstructor]
        private GetCatalogResult(
            ImmutableDictionary<string, object> annotations,

            string branch,

            string clusterId,

            string description,

            string id,

            string kind,

            ImmutableDictionary<string, object> labels,

            string name,

            string password,

            string projectId,

            string? scope,

            string url,

            string username,

            string version)
        {
            Annotations = annotations;
            Branch = branch;
            ClusterId = clusterId;
            Description = description;
            Id = id;
            Kind = kind;
            Labels = labels;
            Name = name;
            Password = password;
            ProjectId = projectId;
            Scope = scope;
            Url = url;
            Username = username;
            Version = version;
        }
    }
}
