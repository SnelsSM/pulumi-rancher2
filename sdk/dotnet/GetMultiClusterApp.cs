// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Rancher2
{
    public static class GetMultiClusterApp
    {
        public static Task<GetMultiClusterAppResult> InvokeAsync(GetMultiClusterAppArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetMultiClusterAppResult>("rancher2:index/getMultiClusterApp:getMultiClusterApp", args ?? new GetMultiClusterAppArgs(), options.WithVersion());
    }


    public sealed class GetMultiClusterAppArgs : Pulumi.InvokeArgs
    {
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        public GetMultiClusterAppArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetMultiClusterAppResult
    {
        public readonly ImmutableDictionary<string, object> Annotations;
        public readonly ImmutableArray<Outputs.GetMultiClusterAppAnswerResult> Answers;
        public readonly string CatalogName;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableDictionary<string, object> Labels;
        public readonly ImmutableArray<Outputs.GetMultiClusterAppMemberResult> Members;
        public readonly string Name;
        public readonly int RevisionHistoryLimit;
        public readonly string RevisionId;
        public readonly ImmutableArray<string> Roles;
        public readonly ImmutableArray<Outputs.GetMultiClusterAppTargetResult> Targets;
        public readonly string TemplateName;
        public readonly string TemplateVersion;
        public readonly string TemplateVersionId;
        public readonly ImmutableArray<Outputs.GetMultiClusterAppUpgradeStrategyResult> UpgradeStrategies;

        [OutputConstructor]
        private GetMultiClusterAppResult(
            ImmutableDictionary<string, object> annotations,

            ImmutableArray<Outputs.GetMultiClusterAppAnswerResult> answers,

            string catalogName,

            string id,

            ImmutableDictionary<string, object> labels,

            ImmutableArray<Outputs.GetMultiClusterAppMemberResult> members,

            string name,

            int revisionHistoryLimit,

            string revisionId,

            ImmutableArray<string> roles,

            ImmutableArray<Outputs.GetMultiClusterAppTargetResult> targets,

            string templateName,

            string templateVersion,

            string templateVersionId,

            ImmutableArray<Outputs.GetMultiClusterAppUpgradeStrategyResult> upgradeStrategies)
        {
            Annotations = annotations;
            Answers = answers;
            CatalogName = catalogName;
            Id = id;
            Labels = labels;
            Members = members;
            Name = name;
            RevisionHistoryLimit = revisionHistoryLimit;
            RevisionId = revisionId;
            Roles = roles;
            Targets = targets;
            TemplateName = templateName;
            TemplateVersion = templateVersion;
            TemplateVersionId = templateVersionId;
            UpgradeStrategies = upgradeStrategies;
        }
    }
}
