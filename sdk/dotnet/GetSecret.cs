// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Rancher2
{
    public static class GetSecret
    {
        public static Task<GetSecretResult> InvokeAsync(GetSecretArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetSecretResult>("rancher2:index/getSecret:getSecret", args ?? new GetSecretArgs(), options.WithVersion());
    }


    public sealed class GetSecretArgs : Pulumi.InvokeArgs
    {
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        [Input("namespaceId")]
        public string? NamespaceId { get; set; }

        [Input("projectId", required: true)]
        public string ProjectId { get; set; } = null!;

        public GetSecretArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetSecretResult
    {
        public readonly ImmutableDictionary<string, object> Annotations;
        public readonly ImmutableDictionary<string, object> Data;
        public readonly string Description;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableDictionary<string, object> Labels;
        public readonly string Name;
        public readonly string? NamespaceId;
        public readonly string ProjectId;

        [OutputConstructor]
        private GetSecretResult(
            ImmutableDictionary<string, object> annotations,

            ImmutableDictionary<string, object> data,

            string description,

            string id,

            ImmutableDictionary<string, object> labels,

            string name,

            string? namespaceId,

            string projectId)
        {
            Annotations = annotations;
            Data = data;
            Description = description;
            Id = id;
            Labels = labels;
            Name = name;
            NamespaceId = namespaceId;
            ProjectId = projectId;
        }
    }
}
