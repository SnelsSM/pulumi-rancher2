// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Rancher2
{
    public partial class Cluster : Pulumi.CustomResource
    {
        [Output("aksConfig")]
        public Output<Outputs.ClusterAksConfig?> AksConfig { get; private set; } = null!;

        /// <summary>
        /// Annotations of the resource
        /// </summary>
        [Output("annotations")]
        public Output<ImmutableDictionary<string, object>> Annotations { get; private set; } = null!;

        [Output("clusterAuthEndpoint")]
        public Output<Outputs.ClusterClusterAuthEndpoint> ClusterAuthEndpoint { get; private set; } = null!;

        /// <summary>
        /// Cluster monitoring configuration
        /// </summary>
        [Output("clusterMonitoringInput")]
        public Output<Outputs.ClusterClusterMonitoringInput?> ClusterMonitoringInput { get; private set; } = null!;

        [Output("clusterRegistrationToken")]
        public Output<Outputs.ClusterClusterRegistrationToken> ClusterRegistrationToken { get; private set; } = null!;

        /// <summary>
        /// Cluster template answers
        /// </summary>
        [Output("clusterTemplateAnswers")]
        public Output<Outputs.ClusterClusterTemplateAnswers> ClusterTemplateAnswers { get; private set; } = null!;

        /// <summary>
        /// Cluster template ID
        /// </summary>
        [Output("clusterTemplateId")]
        public Output<string?> ClusterTemplateId { get; private set; } = null!;

        /// <summary>
        /// Cluster template questions
        /// </summary>
        [Output("clusterTemplateQuestions")]
        public Output<ImmutableArray<Outputs.ClusterClusterTemplateQuestion>> ClusterTemplateQuestions { get; private set; } = null!;

        /// <summary>
        /// Cluster template revision ID
        /// </summary>
        [Output("clusterTemplateRevisionId")]
        public Output<string?> ClusterTemplateRevisionId { get; private set; } = null!;

        /// <summary>
        /// Default pod security policy template id
        /// </summary>
        [Output("defaultPodSecurityPolicyTemplateId")]
        public Output<string> DefaultPodSecurityPolicyTemplateId { get; private set; } = null!;

        [Output("defaultProjectId")]
        public Output<string> DefaultProjectId { get; private set; } = null!;

        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        [Output("desiredAgentImage")]
        public Output<string> DesiredAgentImage { get; private set; } = null!;

        [Output("desiredAuthImage")]
        public Output<string> DesiredAuthImage { get; private set; } = null!;

        [Output("dockerRootDir")]
        public Output<string> DockerRootDir { get; private set; } = null!;

        [Output("driver")]
        public Output<string> Driver { get; private set; } = null!;

        [Output("eksConfig")]
        public Output<Outputs.ClusterEksConfig?> EksConfig { get; private set; } = null!;

        /// <summary>
        /// Enable built-in cluster alerting
        /// </summary>
        [Output("enableClusterAlerting")]
        public Output<bool> EnableClusterAlerting { get; private set; } = null!;

        /// <summary>
        /// Enable built-in cluster istio
        /// </summary>
        [Output("enableClusterIstio")]
        public Output<bool> EnableClusterIstio { get; private set; } = null!;

        /// <summary>
        /// Enable built-in cluster monitoring
        /// </summary>
        [Output("enableClusterMonitoring")]
        public Output<bool> EnableClusterMonitoring { get; private set; } = null!;

        /// <summary>
        /// Enable project network isolation
        /// </summary>
        [Output("enableNetworkPolicy")]
        public Output<bool> EnableNetworkPolicy { get; private set; } = null!;

        [Output("gkeConfig")]
        public Output<Outputs.ClusterGkeConfig?> GkeConfig { get; private set; } = null!;

        /// <summary>
        /// Is istio enabled at cluster?
        /// </summary>
        [Output("istioEnabled")]
        public Output<bool> IstioEnabled { get; private set; } = null!;

        [Output("k3sConfig")]
        public Output<Outputs.ClusterK3sConfig> K3sConfig { get; private set; } = null!;

        [Output("kubeConfig")]
        public Output<string> KubeConfig { get; private set; } = null!;

        /// <summary>
        /// Labels of the resource
        /// </summary>
        [Output("labels")]
        public Output<ImmutableDictionary<string, object>> Labels { get; private set; } = null!;

        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("rkeConfig")]
        public Output<Outputs.ClusterRkeConfig> RkeConfig { get; private set; } = null!;

        /// <summary>
        /// Cluster scheduled scan
        /// </summary>
        [Output("scheduledClusterScan")]
        public Output<Outputs.ClusterScheduledClusterScan> ScheduledClusterScan { get; private set; } = null!;

        [Output("systemProjectId")]
        public Output<string> SystemProjectId { get; private set; } = null!;

        /// <summary>
        /// Windows preferred cluster
        /// </summary>
        [Output("windowsPreferedCluster")]
        public Output<bool?> WindowsPreferedCluster { get; private set; } = null!;


        /// <summary>
        /// Create a Cluster resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Cluster(string name, ClusterArgs? args = null, CustomResourceOptions? options = null)
            : base("rancher2:index/cluster:Cluster", name, args ?? new ClusterArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Cluster(string name, Input<string> id, ClusterState? state = null, CustomResourceOptions? options = null)
            : base("rancher2:index/cluster:Cluster", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Cluster resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Cluster Get(string name, Input<string> id, ClusterState? state = null, CustomResourceOptions? options = null)
        {
            return new Cluster(name, id, state, options);
        }
    }

    public sealed class ClusterArgs : Pulumi.ResourceArgs
    {
        [Input("aksConfig")]
        public Input<Inputs.ClusterAksConfigArgs>? AksConfig { get; set; }

        [Input("annotations")]
        private InputMap<object>? _annotations;

        /// <summary>
        /// Annotations of the resource
        /// </summary>
        public InputMap<object> Annotations
        {
            get => _annotations ?? (_annotations = new InputMap<object>());
            set => _annotations = value;
        }

        [Input("clusterAuthEndpoint")]
        public Input<Inputs.ClusterClusterAuthEndpointArgs>? ClusterAuthEndpoint { get; set; }

        /// <summary>
        /// Cluster monitoring configuration
        /// </summary>
        [Input("clusterMonitoringInput")]
        public Input<Inputs.ClusterClusterMonitoringInputArgs>? ClusterMonitoringInput { get; set; }

        /// <summary>
        /// Cluster template answers
        /// </summary>
        [Input("clusterTemplateAnswers")]
        public Input<Inputs.ClusterClusterTemplateAnswersArgs>? ClusterTemplateAnswers { get; set; }

        /// <summary>
        /// Cluster template ID
        /// </summary>
        [Input("clusterTemplateId")]
        public Input<string>? ClusterTemplateId { get; set; }

        [Input("clusterTemplateQuestions")]
        private InputList<Inputs.ClusterClusterTemplateQuestionArgs>? _clusterTemplateQuestions;

        /// <summary>
        /// Cluster template questions
        /// </summary>
        public InputList<Inputs.ClusterClusterTemplateQuestionArgs> ClusterTemplateQuestions
        {
            get => _clusterTemplateQuestions ?? (_clusterTemplateQuestions = new InputList<Inputs.ClusterClusterTemplateQuestionArgs>());
            set => _clusterTemplateQuestions = value;
        }

        /// <summary>
        /// Cluster template revision ID
        /// </summary>
        [Input("clusterTemplateRevisionId")]
        public Input<string>? ClusterTemplateRevisionId { get; set; }

        /// <summary>
        /// Default pod security policy template id
        /// </summary>
        [Input("defaultPodSecurityPolicyTemplateId")]
        public Input<string>? DefaultPodSecurityPolicyTemplateId { get; set; }

        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("desiredAgentImage")]
        public Input<string>? DesiredAgentImage { get; set; }

        [Input("desiredAuthImage")]
        public Input<string>? DesiredAuthImage { get; set; }

        [Input("dockerRootDir")]
        public Input<string>? DockerRootDir { get; set; }

        [Input("driver")]
        public Input<string>? Driver { get; set; }

        [Input("eksConfig")]
        public Input<Inputs.ClusterEksConfigArgs>? EksConfig { get; set; }

        /// <summary>
        /// Enable built-in cluster alerting
        /// </summary>
        [Input("enableClusterAlerting")]
        public Input<bool>? EnableClusterAlerting { get; set; }

        /// <summary>
        /// Enable built-in cluster monitoring
        /// </summary>
        [Input("enableClusterMonitoring")]
        public Input<bool>? EnableClusterMonitoring { get; set; }

        /// <summary>
        /// Enable project network isolation
        /// </summary>
        [Input("enableNetworkPolicy")]
        public Input<bool>? EnableNetworkPolicy { get; set; }

        [Input("gkeConfig")]
        public Input<Inputs.ClusterGkeConfigArgs>? GkeConfig { get; set; }

        [Input("k3sConfig")]
        public Input<Inputs.ClusterK3sConfigArgs>? K3sConfig { get; set; }

        [Input("labels")]
        private InputMap<object>? _labels;

        /// <summary>
        /// Labels of the resource
        /// </summary>
        public InputMap<object> Labels
        {
            get => _labels ?? (_labels = new InputMap<object>());
            set => _labels = value;
        }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("rkeConfig")]
        public Input<Inputs.ClusterRkeConfigArgs>? RkeConfig { get; set; }

        /// <summary>
        /// Cluster scheduled scan
        /// </summary>
        [Input("scheduledClusterScan")]
        public Input<Inputs.ClusterScheduledClusterScanArgs>? ScheduledClusterScan { get; set; }

        /// <summary>
        /// Windows preferred cluster
        /// </summary>
        [Input("windowsPreferedCluster")]
        public Input<bool>? WindowsPreferedCluster { get; set; }

        public ClusterArgs()
        {
        }
    }

    public sealed class ClusterState : Pulumi.ResourceArgs
    {
        [Input("aksConfig")]
        public Input<Inputs.ClusterAksConfigGetArgs>? AksConfig { get; set; }

        [Input("annotations")]
        private InputMap<object>? _annotations;

        /// <summary>
        /// Annotations of the resource
        /// </summary>
        public InputMap<object> Annotations
        {
            get => _annotations ?? (_annotations = new InputMap<object>());
            set => _annotations = value;
        }

        [Input("clusterAuthEndpoint")]
        public Input<Inputs.ClusterClusterAuthEndpointGetArgs>? ClusterAuthEndpoint { get; set; }

        /// <summary>
        /// Cluster monitoring configuration
        /// </summary>
        [Input("clusterMonitoringInput")]
        public Input<Inputs.ClusterClusterMonitoringInputGetArgs>? ClusterMonitoringInput { get; set; }

        [Input("clusterRegistrationToken")]
        public Input<Inputs.ClusterClusterRegistrationTokenGetArgs>? ClusterRegistrationToken { get; set; }

        /// <summary>
        /// Cluster template answers
        /// </summary>
        [Input("clusterTemplateAnswers")]
        public Input<Inputs.ClusterClusterTemplateAnswersGetArgs>? ClusterTemplateAnswers { get; set; }

        /// <summary>
        /// Cluster template ID
        /// </summary>
        [Input("clusterTemplateId")]
        public Input<string>? ClusterTemplateId { get; set; }

        [Input("clusterTemplateQuestions")]
        private InputList<Inputs.ClusterClusterTemplateQuestionGetArgs>? _clusterTemplateQuestions;

        /// <summary>
        /// Cluster template questions
        /// </summary>
        public InputList<Inputs.ClusterClusterTemplateQuestionGetArgs> ClusterTemplateQuestions
        {
            get => _clusterTemplateQuestions ?? (_clusterTemplateQuestions = new InputList<Inputs.ClusterClusterTemplateQuestionGetArgs>());
            set => _clusterTemplateQuestions = value;
        }

        /// <summary>
        /// Cluster template revision ID
        /// </summary>
        [Input("clusterTemplateRevisionId")]
        public Input<string>? ClusterTemplateRevisionId { get; set; }

        /// <summary>
        /// Default pod security policy template id
        /// </summary>
        [Input("defaultPodSecurityPolicyTemplateId")]
        public Input<string>? DefaultPodSecurityPolicyTemplateId { get; set; }

        [Input("defaultProjectId")]
        public Input<string>? DefaultProjectId { get; set; }

        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("desiredAgentImage")]
        public Input<string>? DesiredAgentImage { get; set; }

        [Input("desiredAuthImage")]
        public Input<string>? DesiredAuthImage { get; set; }

        [Input("dockerRootDir")]
        public Input<string>? DockerRootDir { get; set; }

        [Input("driver")]
        public Input<string>? Driver { get; set; }

        [Input("eksConfig")]
        public Input<Inputs.ClusterEksConfigGetArgs>? EksConfig { get; set; }

        /// <summary>
        /// Enable built-in cluster alerting
        /// </summary>
        [Input("enableClusterAlerting")]
        public Input<bool>? EnableClusterAlerting { get; set; }

        /// <summary>
        /// Enable built-in cluster istio
        /// </summary>
        [Input("enableClusterIstio")]
        public Input<bool>? EnableClusterIstio { get; set; }

        /// <summary>
        /// Enable built-in cluster monitoring
        /// </summary>
        [Input("enableClusterMonitoring")]
        public Input<bool>? EnableClusterMonitoring { get; set; }

        /// <summary>
        /// Enable project network isolation
        /// </summary>
        [Input("enableNetworkPolicy")]
        public Input<bool>? EnableNetworkPolicy { get; set; }

        [Input("gkeConfig")]
        public Input<Inputs.ClusterGkeConfigGetArgs>? GkeConfig { get; set; }

        /// <summary>
        /// Is istio enabled at cluster?
        /// </summary>
        [Input("istioEnabled")]
        public Input<bool>? IstioEnabled { get; set; }

        [Input("k3sConfig")]
        public Input<Inputs.ClusterK3sConfigGetArgs>? K3sConfig { get; set; }

        [Input("kubeConfig")]
        public Input<string>? KubeConfig { get; set; }

        [Input("labels")]
        private InputMap<object>? _labels;

        /// <summary>
        /// Labels of the resource
        /// </summary>
        public InputMap<object> Labels
        {
            get => _labels ?? (_labels = new InputMap<object>());
            set => _labels = value;
        }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("rkeConfig")]
        public Input<Inputs.ClusterRkeConfigGetArgs>? RkeConfig { get; set; }

        /// <summary>
        /// Cluster scheduled scan
        /// </summary>
        [Input("scheduledClusterScan")]
        public Input<Inputs.ClusterScheduledClusterScanGetArgs>? ScheduledClusterScan { get; set; }

        [Input("systemProjectId")]
        public Input<string>? SystemProjectId { get; set; }

        /// <summary>
        /// Windows preferred cluster
        /// </summary>
        [Input("windowsPreferedCluster")]
        public Input<bool>? WindowsPreferedCluster { get; set; }

        public ClusterState()
        {
        }
    }
}
