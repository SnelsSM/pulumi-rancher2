// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Rancher2.Outputs
{

    [OutputType]
    public sealed class NodeTemplateVsphereConfig
    {
        public readonly string? Boot2dockerUrl;
        public readonly ImmutableArray<string> Cfgparams;
        public readonly string? CloneFrom;
        public readonly string? CloudConfig;
        public readonly string? Cloudinit;
        public readonly string? ContentLibrary;
        public readonly string? CpuCount;
        public readonly string? CreationType;
        public readonly ImmutableArray<string> CustomAttributes;
        public readonly string? Datacenter;
        public readonly string? Datastore;
        public readonly string? DatastoreCluster;
        public readonly string? DiskSize;
        public readonly string? Folder;
        public readonly string? Hostsystem;
        public readonly string? MemorySize;
        public readonly ImmutableArray<string> Networks;
        public readonly string? Password;
        public readonly string? Pool;
        public readonly string? SshPassword;
        public readonly string? SshPort;
        public readonly string? SshUser;
        public readonly string? SshUserGroup;
        public readonly ImmutableArray<string> Tags;
        public readonly string? Username;
        public readonly string? VappIpAllocationPolicy;
        public readonly string? VappIpProtocol;
        public readonly ImmutableArray<string> VappProperties;
        public readonly string? VappTransport;
        public readonly string? Vcenter;
        public readonly string? VcenterPort;

        [OutputConstructor]
        private NodeTemplateVsphereConfig(
            string? boot2dockerUrl,

            ImmutableArray<string> cfgparams,

            string? cloneFrom,

            string? cloudConfig,

            string? cloudinit,

            string? contentLibrary,

            string? cpuCount,

            string? creationType,

            ImmutableArray<string> customAttributes,

            string? datacenter,

            string? datastore,

            string? datastoreCluster,

            string? diskSize,

            string? folder,

            string? hostsystem,

            string? memorySize,

            ImmutableArray<string> networks,

            string? password,

            string? pool,

            string? sshPassword,

            string? sshPort,

            string? sshUser,

            string? sshUserGroup,

            ImmutableArray<string> tags,

            string? username,

            string? vappIpAllocationPolicy,

            string? vappIpProtocol,

            ImmutableArray<string> vappProperties,

            string? vappTransport,

            string? vcenter,

            string? vcenterPort)
        {
            Boot2dockerUrl = boot2dockerUrl;
            Cfgparams = cfgparams;
            CloneFrom = cloneFrom;
            CloudConfig = cloudConfig;
            Cloudinit = cloudinit;
            ContentLibrary = contentLibrary;
            CpuCount = cpuCount;
            CreationType = creationType;
            CustomAttributes = customAttributes;
            Datacenter = datacenter;
            Datastore = datastore;
            DatastoreCluster = datastoreCluster;
            DiskSize = diskSize;
            Folder = folder;
            Hostsystem = hostsystem;
            MemorySize = memorySize;
            Networks = networks;
            Password = password;
            Pool = pool;
            SshPassword = sshPassword;
            SshPort = sshPort;
            SshUser = sshUser;
            SshUserGroup = sshUserGroup;
            Tags = tags;
            Username = username;
            VappIpAllocationPolicy = vappIpAllocationPolicy;
            VappIpProtocol = vappIpProtocol;
            VappProperties = vappProperties;
            VappTransport = vappTransport;
            Vcenter = vcenter;
            VcenterPort = vcenterPort;
        }
    }
}
