// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Rancher2.Outputs
{

    [OutputType]
    public sealed class ClusterRkeConfig
    {
        public readonly int? AddonJobTimeout;
        public readonly string? Addons;
        public readonly ImmutableArray<string> AddonsIncludes;
        public readonly Outputs.ClusterRkeConfigAuthentication? Authentication;
        public readonly Outputs.ClusterRkeConfigAuthorization? Authorization;
        public readonly Outputs.ClusterRkeConfigBastionHost? BastionHost;
        public readonly Outputs.ClusterRkeConfigCloudProvider? CloudProvider;
        public readonly Outputs.ClusterRkeConfigDns? Dns;
        public readonly bool? IgnoreDockerVersion;
        public readonly Outputs.ClusterRkeConfigIngress? Ingress;
        public readonly string? KubernetesVersion;
        public readonly Outputs.ClusterRkeConfigMonitoring? Monitoring;
        public readonly Outputs.ClusterRkeConfigNetwork? Network;
        public readonly ImmutableArray<Outputs.ClusterRkeConfigNode> Nodes;
        public readonly string? PrefixPath;
        public readonly ImmutableArray<Outputs.ClusterRkeConfigPrivateRegistry> PrivateRegistries;
        public readonly Outputs.ClusterRkeConfigServices? Services;
        public readonly bool? SshAgentAuth;
        public readonly string? SshCertPath;
        public readonly string? SshKeyPath;
        public readonly Outputs.ClusterRkeConfigUpgradeStrategy? UpgradeStrategy;

        [OutputConstructor]
        private ClusterRkeConfig(
            int? addonJobTimeout,

            string? addons,

            ImmutableArray<string> addonsIncludes,

            Outputs.ClusterRkeConfigAuthentication? authentication,

            Outputs.ClusterRkeConfigAuthorization? authorization,

            Outputs.ClusterRkeConfigBastionHost? bastionHost,

            Outputs.ClusterRkeConfigCloudProvider? cloudProvider,

            Outputs.ClusterRkeConfigDns? dns,

            bool? ignoreDockerVersion,

            Outputs.ClusterRkeConfigIngress? ingress,

            string? kubernetesVersion,

            Outputs.ClusterRkeConfigMonitoring? monitoring,

            Outputs.ClusterRkeConfigNetwork? network,

            ImmutableArray<Outputs.ClusterRkeConfigNode> nodes,

            string? prefixPath,

            ImmutableArray<Outputs.ClusterRkeConfigPrivateRegistry> privateRegistries,

            Outputs.ClusterRkeConfigServices? services,

            bool? sshAgentAuth,

            string? sshCertPath,

            string? sshKeyPath,

            Outputs.ClusterRkeConfigUpgradeStrategy? upgradeStrategy)
        {
            AddonJobTimeout = addonJobTimeout;
            Addons = addons;
            AddonsIncludes = addonsIncludes;
            Authentication = authentication;
            Authorization = authorization;
            BastionHost = bastionHost;
            CloudProvider = cloudProvider;
            Dns = dns;
            IgnoreDockerVersion = ignoreDockerVersion;
            Ingress = ingress;
            KubernetesVersion = kubernetesVersion;
            Monitoring = monitoring;
            Network = network;
            Nodes = nodes;
            PrefixPath = prefixPath;
            PrivateRegistries = privateRegistries;
            Services = services;
            SshAgentAuth = sshAgentAuth;
            SshCertPath = sshCertPath;
            SshKeyPath = sshKeyPath;
            UpgradeStrategy = upgradeStrategy;
        }
    }
}
