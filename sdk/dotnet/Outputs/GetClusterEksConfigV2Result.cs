// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Rancher2.Outputs
{

    [OutputType]
    public sealed class GetClusterEksConfigV2Result
    {
        public readonly string CloudCredentialId;
        public readonly bool? Imported;
        public readonly string? KmsKey;
        public readonly string KubernetesVersion;
        public readonly ImmutableArray<string> LoggingTypes;
        /// <summary>
        /// The name of the Cluster (string)
        /// </summary>
        public readonly string Name;
        public readonly ImmutableArray<Outputs.GetClusterEksConfigV2NodeGroupResult> NodeGroups;
        public readonly bool? PrivateAccess;
        public readonly bool? PublicAccess;
        public readonly ImmutableArray<string> PublicAccessSources;
        public readonly string? Region;
        public readonly bool? SecretsEncryption;
        public readonly ImmutableArray<string> SecurityGroups;
        public readonly string? ServiceRole;
        public readonly ImmutableArray<string> Subnets;
        public readonly ImmutableDictionary<string, object>? Tags;

        [OutputConstructor]
        private GetClusterEksConfigV2Result(
            string cloudCredentialId,

            bool? imported,

            string? kmsKey,

            string kubernetesVersion,

            ImmutableArray<string> loggingTypes,

            string name,

            ImmutableArray<Outputs.GetClusterEksConfigV2NodeGroupResult> nodeGroups,

            bool? privateAccess,

            bool? publicAccess,

            ImmutableArray<string> publicAccessSources,

            string? region,

            bool? secretsEncryption,

            ImmutableArray<string> securityGroups,

            string? serviceRole,

            ImmutableArray<string> subnets,

            ImmutableDictionary<string, object>? tags)
        {
            CloudCredentialId = cloudCredentialId;
            Imported = imported;
            KmsKey = kmsKey;
            KubernetesVersion = kubernetesVersion;
            LoggingTypes = loggingTypes;
            Name = name;
            NodeGroups = nodeGroups;
            PrivateAccess = privateAccess;
            PublicAccess = publicAccess;
            PublicAccessSources = publicAccessSources;
            Region = region;
            SecretsEncryption = secretsEncryption;
            SecurityGroups = securityGroups;
            ServiceRole = serviceRole;
            Subnets = subnets;
            Tags = tags;
        }
    }
}
