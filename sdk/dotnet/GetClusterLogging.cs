// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Rancher2
{
    public static class GetClusterLogging
    {
        public static Task<GetClusterLoggingResult> InvokeAsync(GetClusterLoggingArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetClusterLoggingResult>("rancher2:index/getClusterLogging:getClusterLogging", args ?? new GetClusterLoggingArgs(), options.WithVersion());
    }


    public sealed class GetClusterLoggingArgs : Pulumi.InvokeArgs
    {
        [Input("clusterId", required: true)]
        public string ClusterId { get; set; } = null!;

        public GetClusterLoggingArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetClusterLoggingResult
    {
        public readonly ImmutableDictionary<string, object> Annotations;
        public readonly string ClusterId;
        public readonly Outputs.GetClusterLoggingCustomTargetConfigResult CustomTargetConfig;
        public readonly Outputs.GetClusterLoggingElasticsearchConfigResult ElasticsearchConfig;
        public readonly bool EnableJsonParsing;
        public readonly Outputs.GetClusterLoggingFluentdConfigResult FluentdConfig;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly Outputs.GetClusterLoggingKafkaConfigResult KafkaConfig;
        public readonly string Kind;
        public readonly ImmutableDictionary<string, object> Labels;
        public readonly string Name;
        public readonly string NamespaceId;
        public readonly int OutputFlushInterval;
        public readonly ImmutableDictionary<string, object> OutputTags;
        public readonly Outputs.GetClusterLoggingSplunkConfigResult SplunkConfig;
        public readonly Outputs.GetClusterLoggingSyslogConfigResult SyslogConfig;

        [OutputConstructor]
        private GetClusterLoggingResult(
            ImmutableDictionary<string, object> annotations,

            string clusterId,

            Outputs.GetClusterLoggingCustomTargetConfigResult customTargetConfig,

            Outputs.GetClusterLoggingElasticsearchConfigResult elasticsearchConfig,

            bool enableJsonParsing,

            Outputs.GetClusterLoggingFluentdConfigResult fluentdConfig,

            string id,

            Outputs.GetClusterLoggingKafkaConfigResult kafkaConfig,

            string kind,

            ImmutableDictionary<string, object> labels,

            string name,

            string namespaceId,

            int outputFlushInterval,

            ImmutableDictionary<string, object> outputTags,

            Outputs.GetClusterLoggingSplunkConfigResult splunkConfig,

            Outputs.GetClusterLoggingSyslogConfigResult syslogConfig)
        {
            Annotations = annotations;
            ClusterId = clusterId;
            CustomTargetConfig = customTargetConfig;
            ElasticsearchConfig = elasticsearchConfig;
            EnableJsonParsing = enableJsonParsing;
            FluentdConfig = fluentdConfig;
            Id = id;
            KafkaConfig = kafkaConfig;
            Kind = kind;
            Labels = labels;
            Name = name;
            NamespaceId = namespaceId;
            OutputFlushInterval = outputFlushInterval;
            OutputTags = outputTags;
            SplunkConfig = splunkConfig;
            SyslogConfig = syslogConfig;
        }
    }
}
