// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Rancher2.Inputs
{

    public sealed class ClusterEksConfigV2Args : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The AKS Cloud Credential ID to use (string)
        /// </summary>
        [Input("cloudCredentialId", required: true)]
        public Input<string> CloudCredentialId { get; set; } = null!;

        /// <summary>
        /// Is AKS cluster imported? Defaul: `false` (bool)
        /// </summary>
        [Input("imported")]
        public Input<bool>? Imported { get; set; }

        /// <summary>
        /// The AWS kms key to use (string)
        /// </summary>
        [Input("kmsKey")]
        public Input<string>? KmsKey { get; set; }

        /// <summary>
        /// K8s version to deploy. Default: `Rancher default` (string) (Note - if rke_config is set at cluster_template, kubernetes_version must be set to the active cluster version so Rancher can clone the RKE template)
        /// </summary>
        [Input("kubernetesVersion")]
        public Input<string>? KubernetesVersion { get; set; }

        [Input("loggingTypes")]
        private InputList<string>? _loggingTypes;

        /// <summary>
        /// The AWS cloudwatch logging types. `audit`, `api`, `scheduler`, `controllerManager` and `authenticator` values are allowed (list)
        /// </summary>
        public InputList<string> LoggingTypes
        {
            get => _loggingTypes ?? (_loggingTypes = new InputList<string>());
            set => _loggingTypes = value;
        }

        /// <summary>
        /// The name of the Cluster (string)
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("nodeGroups")]
        private InputList<Inputs.ClusterEksConfigV2NodeGroupArgs>? _nodeGroups;

        /// <summary>
        /// The EKS cluster name to import. Required to create a new cluster (list)
        /// </summary>
        public InputList<Inputs.ClusterEksConfigV2NodeGroupArgs> NodeGroups
        {
            get => _nodeGroups ?? (_nodeGroups = new InputList<Inputs.ClusterEksConfigV2NodeGroupArgs>());
            set => _nodeGroups = value;
        }

        /// <summary>
        /// The EKS cluster has private access (bool)
        /// </summary>
        [Input("privateAccess")]
        public Input<bool>? PrivateAccess { get; set; }

        /// <summary>
        /// The EKS cluster has public access (bool)
        /// </summary>
        [Input("publicAccess")]
        public Input<bool>? PublicAccess { get; set; }

        [Input("publicAccessSources")]
        private InputList<string>? _publicAccessSources;

        /// <summary>
        /// The EKS cluster public access sources (map)
        /// </summary>
        public InputList<string> PublicAccessSources
        {
            get => _publicAccessSources ?? (_publicAccessSources = new InputList<string>());
            set => _publicAccessSources = value;
        }

        /// <summary>
        /// (string)
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        /// <summary>
        /// Enable EKS cluster secret encryption (bool)
        /// </summary>
        [Input("secretsEncryption")]
        public Input<bool>? SecretsEncryption { get; set; }

        [Input("securityGroups")]
        private InputList<string>? _securityGroups;

        /// <summary>
        /// List of security groups to use for the cluster. If it's not specified Rancher will create a new security group (list)
        /// </summary>
        public InputList<string> SecurityGroups
        {
            get => _securityGroups ?? (_securityGroups = new InputList<string>());
            set => _securityGroups = value;
        }

        /// <summary>
        /// The service role to use to perform the cluster operations in AWS. If it's not specified Rancher will create a new service role (string)
        /// </summary>
        [Input("serviceRole")]
        public Input<string>? ServiceRole { get; set; }

        [Input("subnets")]
        private InputList<string>? _subnets;

        /// <summary>
        /// List of subnets in the virtual network to use. If it's not specified Rancher will create 3 news subnets (list)
        /// </summary>
        public InputList<string> Subnets
        {
            get => _subnets ?? (_subnets = new InputList<string>());
            set => _subnets = value;
        }

        [Input("tags")]
        private InputMap<object>? _tags;

        /// <summary>
        /// Tags for Kubernetes cluster. For example, `["foo=bar","bar=foo"]` (list)
        /// </summary>
        public InputMap<object> Tags
        {
            get => _tags ?? (_tags = new InputMap<object>());
            set => _tags = value;
        }

        public ClusterEksConfigV2Args()
        {
        }
        public static new ClusterEksConfigV2Args Empty => new ClusterEksConfigV2Args();
    }
}
