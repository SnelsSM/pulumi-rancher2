// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Rancher2.Inputs
{

    public sealed class NodeTemplateVsphereConfigGetArgs : Pulumi.ResourceArgs
    {
        [Input("boot2dockerUrl")]
        public Input<string>? Boot2dockerUrl { get; set; }

        [Input("cfgparams")]
        private InputList<string>? _cfgparams;
        public InputList<string> Cfgparams
        {
            get => _cfgparams ?? (_cfgparams = new InputList<string>());
            set => _cfgparams = value;
        }

        [Input("cloneFrom")]
        public Input<string>? CloneFrom { get; set; }

        [Input("cloudConfig")]
        public Input<string>? CloudConfig { get; set; }

        [Input("cloudinit")]
        public Input<string>? Cloudinit { get; set; }

        [Input("contentLibrary")]
        public Input<string>? ContentLibrary { get; set; }

        [Input("cpuCount")]
        public Input<string>? CpuCount { get; set; }

        [Input("creationType")]
        public Input<string>? CreationType { get; set; }

        [Input("customAttributes")]
        private InputList<string>? _customAttributes;
        public InputList<string> CustomAttributes
        {
            get => _customAttributes ?? (_customAttributes = new InputList<string>());
            set => _customAttributes = value;
        }

        [Input("datacenter")]
        public Input<string>? Datacenter { get; set; }

        [Input("datastore")]
        public Input<string>? Datastore { get; set; }

        [Input("datastoreCluster")]
        public Input<string>? DatastoreCluster { get; set; }

        [Input("diskSize")]
        public Input<string>? DiskSize { get; set; }

        [Input("folder")]
        public Input<string>? Folder { get; set; }

        [Input("hostsystem")]
        public Input<string>? Hostsystem { get; set; }

        [Input("memorySize")]
        public Input<string>? MemorySize { get; set; }

        [Input("networks")]
        private InputList<string>? _networks;
        public InputList<string> Networks
        {
            get => _networks ?? (_networks = new InputList<string>());
            set => _networks = value;
        }

        [Input("password")]
        public Input<string>? Password { get; set; }

        [Input("pool")]
        public Input<string>? Pool { get; set; }

        [Input("sshPassword")]
        public Input<string>? SshPassword { get; set; }

        [Input("sshPort")]
        public Input<string>? SshPort { get; set; }

        [Input("sshUser")]
        public Input<string>? SshUser { get; set; }

        [Input("sshUserGroup")]
        public Input<string>? SshUserGroup { get; set; }

        [Input("tags")]
        private InputList<string>? _tags;
        public InputList<string> Tags
        {
            get => _tags ?? (_tags = new InputList<string>());
            set => _tags = value;
        }

        [Input("username")]
        public Input<string>? Username { get; set; }

        [Input("vappIpAllocationPolicy")]
        public Input<string>? VappIpAllocationPolicy { get; set; }

        [Input("vappIpProtocol")]
        public Input<string>? VappIpProtocol { get; set; }

        [Input("vappProperties")]
        private InputList<string>? _vappProperties;
        public InputList<string> VappProperties
        {
            get => _vappProperties ?? (_vappProperties = new InputList<string>());
            set => _vappProperties = value;
        }

        [Input("vappTransport")]
        public Input<string>? VappTransport { get; set; }

        [Input("vcenter")]
        public Input<string>? Vcenter { get; set; }

        [Input("vcenterPort")]
        public Input<string>? VcenterPort { get; set; }

        public NodeTemplateVsphereConfigGetArgs()
        {
        }
    }
}
