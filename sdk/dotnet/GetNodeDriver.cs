// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Rancher2
{
    public static class GetNodeDriver
    {
        public static Task<GetNodeDriverResult> InvokeAsync(GetNodeDriverArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetNodeDriverResult>("rancher2:index/getNodeDriver:getNodeDriver", args ?? new GetNodeDriverArgs(), options.WithVersion());
    }


    public sealed class GetNodeDriverArgs : Pulumi.InvokeArgs
    {
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        [Input("url")]
        public string? Url { get; set; }

        public GetNodeDriverArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetNodeDriverResult
    {
        public readonly bool Active;
        public readonly ImmutableDictionary<string, object> Annotations;
        public readonly bool Builtin;
        public readonly string Checksum;
        public readonly string Description;
        public readonly string ExternalId;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableDictionary<string, object> Labels;
        public readonly string Name;
        public readonly string UiUrl;
        public readonly string Url;
        public readonly ImmutableArray<string> WhitelistDomains;

        [OutputConstructor]
        private GetNodeDriverResult(
            bool active,

            ImmutableDictionary<string, object> annotations,

            bool builtin,

            string checksum,

            string description,

            string externalId,

            string id,

            ImmutableDictionary<string, object> labels,

            string name,

            string uiUrl,

            string url,

            ImmutableArray<string> whitelistDomains)
        {
            Active = active;
            Annotations = annotations;
            Builtin = builtin;
            Checksum = checksum;
            Description = description;
            ExternalId = externalId;
            Id = id;
            Labels = labels;
            Name = name;
            UiUrl = uiUrl;
            Url = url;
            WhitelistDomains = whitelistDomains;
        }
    }
}
