// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Rancher2
{
    public static class GetProjectLogging
    {
        public static Task<GetProjectLoggingResult> InvokeAsync(GetProjectLoggingArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetProjectLoggingResult>("rancher2:index/getProjectLogging:getProjectLogging", args ?? new GetProjectLoggingArgs(), options.WithVersion());
    }


    public sealed class GetProjectLoggingArgs : Pulumi.InvokeArgs
    {
        [Input("projectId", required: true)]
        public string ProjectId { get; set; } = null!;

        public GetProjectLoggingArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetProjectLoggingResult
    {
        public readonly ImmutableDictionary<string, object> Annotations;
        public readonly Outputs.GetProjectLoggingCustomTargetConfigResult CustomTargetConfig;
        public readonly Outputs.GetProjectLoggingElasticsearchConfigResult ElasticsearchConfig;
        public readonly bool EnableJsonParsing;
        public readonly Outputs.GetProjectLoggingFluentdConfigResult FluentdConfig;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly Outputs.GetProjectLoggingKafkaConfigResult KafkaConfig;
        public readonly string Kind;
        public readonly ImmutableDictionary<string, object> Labels;
        public readonly string Name;
        public readonly string NamespaceId;
        public readonly int OutputFlushInterval;
        public readonly ImmutableDictionary<string, object> OutputTags;
        public readonly string ProjectId;
        public readonly Outputs.GetProjectLoggingSplunkConfigResult SplunkConfig;
        public readonly Outputs.GetProjectLoggingSyslogConfigResult SyslogConfig;

        [OutputConstructor]
        private GetProjectLoggingResult(
            ImmutableDictionary<string, object> annotations,

            Outputs.GetProjectLoggingCustomTargetConfigResult customTargetConfig,

            Outputs.GetProjectLoggingElasticsearchConfigResult elasticsearchConfig,

            bool enableJsonParsing,

            Outputs.GetProjectLoggingFluentdConfigResult fluentdConfig,

            string id,

            Outputs.GetProjectLoggingKafkaConfigResult kafkaConfig,

            string kind,

            ImmutableDictionary<string, object> labels,

            string name,

            string namespaceId,

            int outputFlushInterval,

            ImmutableDictionary<string, object> outputTags,

            string projectId,

            Outputs.GetProjectLoggingSplunkConfigResult splunkConfig,

            Outputs.GetProjectLoggingSyslogConfigResult syslogConfig)
        {
            Annotations = annotations;
            CustomTargetConfig = customTargetConfig;
            ElasticsearchConfig = elasticsearchConfig;
            EnableJsonParsing = enableJsonParsing;
            FluentdConfig = fluentdConfig;
            Id = id;
            KafkaConfig = kafkaConfig;
            Kind = kind;
            Labels = labels;
            Name = name;
            NamespaceId = namespaceId;
            OutputFlushInterval = outputFlushInterval;
            OutputTags = outputTags;
            ProjectId = projectId;
            SplunkConfig = splunkConfig;
            SyslogConfig = syslogConfig;
        }
    }
}
