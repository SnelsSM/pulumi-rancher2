// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Rancher2
{
    public partial class ClusterLogging : Pulumi.CustomResource
    {
        /// <summary>
        /// Annotations of the resource
        /// </summary>
        [Output("annotations")]
        public Output<ImmutableDictionary<string, object>> Annotations { get; private set; } = null!;

        [Output("clusterId")]
        public Output<string> ClusterId { get; private set; } = null!;

        [Output("customTargetConfig")]
        public Output<Outputs.ClusterLoggingCustomTargetConfig?> CustomTargetConfig { get; private set; } = null!;

        [Output("elasticsearchConfig")]
        public Output<Outputs.ClusterLoggingElasticsearchConfig?> ElasticsearchConfig { get; private set; } = null!;

        /// <summary>
        /// Optional enable json log parsing
        /// </summary>
        [Output("enableJsonParsing")]
        public Output<bool?> EnableJsonParsing { get; private set; } = null!;

        [Output("fluentdConfig")]
        public Output<Outputs.ClusterLoggingFluentdConfig?> FluentdConfig { get; private set; } = null!;

        [Output("kafkaConfig")]
        public Output<Outputs.ClusterLoggingKafkaConfig?> KafkaConfig { get; private set; } = null!;

        [Output("kind")]
        public Output<string> Kind { get; private set; } = null!;

        /// <summary>
        /// Labels of the resource
        /// </summary>
        [Output("labels")]
        public Output<ImmutableDictionary<string, object>> Labels { get; private set; } = null!;

        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("namespaceId")]
        public Output<string?> NamespaceId { get; private set; } = null!;

        [Output("outputFlushInterval")]
        public Output<int?> OutputFlushInterval { get; private set; } = null!;

        [Output("outputTags")]
        public Output<ImmutableDictionary<string, object>> OutputTags { get; private set; } = null!;

        [Output("splunkConfig")]
        public Output<Outputs.ClusterLoggingSplunkConfig?> SplunkConfig { get; private set; } = null!;

        [Output("syslogConfig")]
        public Output<Outputs.ClusterLoggingSyslogConfig?> SyslogConfig { get; private set; } = null!;


        /// <summary>
        /// Create a ClusterLogging resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ClusterLogging(string name, ClusterLoggingArgs args, CustomResourceOptions? options = null)
            : base("rancher2:index/clusterLogging:ClusterLogging", name, args ?? new ClusterLoggingArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ClusterLogging(string name, Input<string> id, ClusterLoggingState? state = null, CustomResourceOptions? options = null)
            : base("rancher2:index/clusterLogging:ClusterLogging", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ClusterLogging resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ClusterLogging Get(string name, Input<string> id, ClusterLoggingState? state = null, CustomResourceOptions? options = null)
        {
            return new ClusterLogging(name, id, state, options);
        }
    }

    public sealed class ClusterLoggingArgs : Pulumi.ResourceArgs
    {
        [Input("annotations")]
        private InputMap<object>? _annotations;

        /// <summary>
        /// Annotations of the resource
        /// </summary>
        public InputMap<object> Annotations
        {
            get => _annotations ?? (_annotations = new InputMap<object>());
            set => _annotations = value;
        }

        [Input("clusterId", required: true)]
        public Input<string> ClusterId { get; set; } = null!;

        [Input("customTargetConfig")]
        public Input<Inputs.ClusterLoggingCustomTargetConfigArgs>? CustomTargetConfig { get; set; }

        [Input("elasticsearchConfig")]
        public Input<Inputs.ClusterLoggingElasticsearchConfigArgs>? ElasticsearchConfig { get; set; }

        /// <summary>
        /// Optional enable json log parsing
        /// </summary>
        [Input("enableJsonParsing")]
        public Input<bool>? EnableJsonParsing { get; set; }

        [Input("fluentdConfig")]
        public Input<Inputs.ClusterLoggingFluentdConfigArgs>? FluentdConfig { get; set; }

        [Input("kafkaConfig")]
        public Input<Inputs.ClusterLoggingKafkaConfigArgs>? KafkaConfig { get; set; }

        [Input("kind", required: true)]
        public Input<string> Kind { get; set; } = null!;

        [Input("labels")]
        private InputMap<object>? _labels;

        /// <summary>
        /// Labels of the resource
        /// </summary>
        public InputMap<object> Labels
        {
            get => _labels ?? (_labels = new InputMap<object>());
            set => _labels = value;
        }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("namespaceId")]
        public Input<string>? NamespaceId { get; set; }

        [Input("outputFlushInterval")]
        public Input<int>? OutputFlushInterval { get; set; }

        [Input("outputTags")]
        private InputMap<object>? _outputTags;
        public InputMap<object> OutputTags
        {
            get => _outputTags ?? (_outputTags = new InputMap<object>());
            set => _outputTags = value;
        }

        [Input("splunkConfig")]
        public Input<Inputs.ClusterLoggingSplunkConfigArgs>? SplunkConfig { get; set; }

        [Input("syslogConfig")]
        public Input<Inputs.ClusterLoggingSyslogConfigArgs>? SyslogConfig { get; set; }

        public ClusterLoggingArgs()
        {
        }
    }

    public sealed class ClusterLoggingState : Pulumi.ResourceArgs
    {
        [Input("annotations")]
        private InputMap<object>? _annotations;

        /// <summary>
        /// Annotations of the resource
        /// </summary>
        public InputMap<object> Annotations
        {
            get => _annotations ?? (_annotations = new InputMap<object>());
            set => _annotations = value;
        }

        [Input("clusterId")]
        public Input<string>? ClusterId { get; set; }

        [Input("customTargetConfig")]
        public Input<Inputs.ClusterLoggingCustomTargetConfigGetArgs>? CustomTargetConfig { get; set; }

        [Input("elasticsearchConfig")]
        public Input<Inputs.ClusterLoggingElasticsearchConfigGetArgs>? ElasticsearchConfig { get; set; }

        /// <summary>
        /// Optional enable json log parsing
        /// </summary>
        [Input("enableJsonParsing")]
        public Input<bool>? EnableJsonParsing { get; set; }

        [Input("fluentdConfig")]
        public Input<Inputs.ClusterLoggingFluentdConfigGetArgs>? FluentdConfig { get; set; }

        [Input("kafkaConfig")]
        public Input<Inputs.ClusterLoggingKafkaConfigGetArgs>? KafkaConfig { get; set; }

        [Input("kind")]
        public Input<string>? Kind { get; set; }

        [Input("labels")]
        private InputMap<object>? _labels;

        /// <summary>
        /// Labels of the resource
        /// </summary>
        public InputMap<object> Labels
        {
            get => _labels ?? (_labels = new InputMap<object>());
            set => _labels = value;
        }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("namespaceId")]
        public Input<string>? NamespaceId { get; set; }

        [Input("outputFlushInterval")]
        public Input<int>? OutputFlushInterval { get; set; }

        [Input("outputTags")]
        private InputMap<object>? _outputTags;
        public InputMap<object> OutputTags
        {
            get => _outputTags ?? (_outputTags = new InputMap<object>());
            set => _outputTags = value;
        }

        [Input("splunkConfig")]
        public Input<Inputs.ClusterLoggingSplunkConfigGetArgs>? SplunkConfig { get; set; }

        [Input("syslogConfig")]
        public Input<Inputs.ClusterLoggingSyslogConfigGetArgs>? SyslogConfig { get; set; }

        public ClusterLoggingState()
        {
        }
    }
}
