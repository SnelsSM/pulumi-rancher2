// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Rancher2
{
    public static class GetNodeTemplate
    {
        public static Task<GetNodeTemplateResult> InvokeAsync(GetNodeTemplateArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetNodeTemplateResult>("rancher2:index/getNodeTemplate:getNodeTemplate", args ?? new GetNodeTemplateArgs(), options.WithVersion());
    }


    public sealed class GetNodeTemplateArgs : Pulumi.InvokeArgs
    {
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        [Input("useInternalIpAddress")]
        public bool? UseInternalIpAddress { get; set; }

        public GetNodeTemplateArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetNodeTemplateResult
    {
        public readonly ImmutableDictionary<string, object> Annotations;
        public readonly string CloudCredentialId;
        public readonly string Description;
        public readonly string Driver;
        public readonly ImmutableDictionary<string, object> EngineEnv;
        public readonly ImmutableArray<string> EngineInsecureRegistries;
        public readonly string EngineInstallUrl;
        public readonly ImmutableDictionary<string, object> EngineLabel;
        public readonly ImmutableDictionary<string, object> EngineOpt;
        public readonly ImmutableArray<string> EngineRegistryMirrors;
        public readonly string EngineStorageDriver;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableDictionary<string, object> Labels;
        public readonly string Name;
        public readonly bool? UseInternalIpAddress;

        [OutputConstructor]
        private GetNodeTemplateResult(
            ImmutableDictionary<string, object> annotations,

            string cloudCredentialId,

            string description,

            string driver,

            ImmutableDictionary<string, object> engineEnv,

            ImmutableArray<string> engineInsecureRegistries,

            string engineInstallUrl,

            ImmutableDictionary<string, object> engineLabel,

            ImmutableDictionary<string, object> engineOpt,

            ImmutableArray<string> engineRegistryMirrors,

            string engineStorageDriver,

            string id,

            ImmutableDictionary<string, object> labels,

            string name,

            bool? useInternalIpAddress)
        {
            Annotations = annotations;
            CloudCredentialId = cloudCredentialId;
            Description = description;
            Driver = driver;
            EngineEnv = engineEnv;
            EngineInsecureRegistries = engineInsecureRegistries;
            EngineInstallUrl = engineInstallUrl;
            EngineLabel = engineLabel;
            EngineOpt = engineOpt;
            EngineRegistryMirrors = engineRegistryMirrors;
            EngineStorageDriver = engineStorageDriver;
            Id = id;
            Labels = labels;
            Name = name;
            UseInternalIpAddress = useInternalIpAddress;
        }
    }
}
