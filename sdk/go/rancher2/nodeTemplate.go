// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package rancher2

import (
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type NodeTemplate struct {
	pulumi.CustomResourceState

	Amazonec2Config NodeTemplateAmazonec2ConfigPtrOutput `pulumi:"amazonec2Config"`
	// Annotations of the resource
	Annotations              pulumi.MapOutput                        `pulumi:"annotations"`
	AuthCertificateAuthority pulumi.StringPtrOutput                  `pulumi:"authCertificateAuthority"`
	AuthKey                  pulumi.StringPtrOutput                  `pulumi:"authKey"`
	AzureConfig              NodeTemplateAzureConfigPtrOutput        `pulumi:"azureConfig"`
	CloudCredentialId        pulumi.StringPtrOutput                  `pulumi:"cloudCredentialId"`
	Description              pulumi.StringPtrOutput                  `pulumi:"description"`
	DigitaloceanConfig       NodeTemplateDigitaloceanConfigPtrOutput `pulumi:"digitaloceanConfig"`
	Driver                   pulumi.StringOutput                     `pulumi:"driver"`
	DriverId                 pulumi.StringOutput                     `pulumi:"driverId"`
	EngineEnv                pulumi.MapOutput                        `pulumi:"engineEnv"`
	EngineInsecureRegistries pulumi.StringArrayOutput                `pulumi:"engineInsecureRegistries"`
	EngineInstallUrl         pulumi.StringPtrOutput                  `pulumi:"engineInstallUrl"`
	EngineLabel              pulumi.MapOutput                        `pulumi:"engineLabel"`
	EngineOpt                pulumi.MapOutput                        `pulumi:"engineOpt"`
	EngineRegistryMirrors    pulumi.StringArrayOutput                `pulumi:"engineRegistryMirrors"`
	EngineStorageDriver      pulumi.StringPtrOutput                  `pulumi:"engineStorageDriver"`
	// Labels of the resource
	Labels               pulumi.MapOutput                      `pulumi:"labels"`
	LinodeConfig         NodeTemplateLinodeConfigPtrOutput     `pulumi:"linodeConfig"`
	Name                 pulumi.StringOutput                   `pulumi:"name"`
	OpennebulaConfig     NodeTemplateOpennebulaConfigPtrOutput `pulumi:"opennebulaConfig"`
	OpenstackConfig      NodeTemplateOpenstackConfigPtrOutput  `pulumi:"openstackConfig"`
	UseInternalIpAddress pulumi.BoolPtrOutput                  `pulumi:"useInternalIpAddress"`
	VsphereConfig        NodeTemplateVsphereConfigPtrOutput    `pulumi:"vsphereConfig"`
}

// NewNodeTemplate registers a new resource with the given unique name, arguments, and options.
func NewNodeTemplate(ctx *pulumi.Context,
	name string, args *NodeTemplateArgs, opts ...pulumi.ResourceOption) (*NodeTemplate, error) {
	if args == nil {
		args = &NodeTemplateArgs{}
	}
	var resource NodeTemplate
	err := ctx.RegisterResource("rancher2:index/nodeTemplate:NodeTemplate", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetNodeTemplate gets an existing NodeTemplate resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNodeTemplate(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *NodeTemplateState, opts ...pulumi.ResourceOption) (*NodeTemplate, error) {
	var resource NodeTemplate
	err := ctx.ReadResource("rancher2:index/nodeTemplate:NodeTemplate", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering NodeTemplate resources.
type nodeTemplateState struct {
	Amazonec2Config *NodeTemplateAmazonec2Config `pulumi:"amazonec2Config"`
	// Annotations of the resource
	Annotations              map[string]interface{}          `pulumi:"annotations"`
	AuthCertificateAuthority *string                         `pulumi:"authCertificateAuthority"`
	AuthKey                  *string                         `pulumi:"authKey"`
	AzureConfig              *NodeTemplateAzureConfig        `pulumi:"azureConfig"`
	CloudCredentialId        *string                         `pulumi:"cloudCredentialId"`
	Description              *string                         `pulumi:"description"`
	DigitaloceanConfig       *NodeTemplateDigitaloceanConfig `pulumi:"digitaloceanConfig"`
	Driver                   *string                         `pulumi:"driver"`
	DriverId                 *string                         `pulumi:"driverId"`
	EngineEnv                map[string]interface{}          `pulumi:"engineEnv"`
	EngineInsecureRegistries []string                        `pulumi:"engineInsecureRegistries"`
	EngineInstallUrl         *string                         `pulumi:"engineInstallUrl"`
	EngineLabel              map[string]interface{}          `pulumi:"engineLabel"`
	EngineOpt                map[string]interface{}          `pulumi:"engineOpt"`
	EngineRegistryMirrors    []string                        `pulumi:"engineRegistryMirrors"`
	EngineStorageDriver      *string                         `pulumi:"engineStorageDriver"`
	// Labels of the resource
	Labels               map[string]interface{}        `pulumi:"labels"`
	LinodeConfig         *NodeTemplateLinodeConfig     `pulumi:"linodeConfig"`
	Name                 *string                       `pulumi:"name"`
	OpennebulaConfig     *NodeTemplateOpennebulaConfig `pulumi:"opennebulaConfig"`
	OpenstackConfig      *NodeTemplateOpenstackConfig  `pulumi:"openstackConfig"`
	UseInternalIpAddress *bool                         `pulumi:"useInternalIpAddress"`
	VsphereConfig        *NodeTemplateVsphereConfig    `pulumi:"vsphereConfig"`
}

type NodeTemplateState struct {
	Amazonec2Config NodeTemplateAmazonec2ConfigPtrInput
	// Annotations of the resource
	Annotations              pulumi.MapInput
	AuthCertificateAuthority pulumi.StringPtrInput
	AuthKey                  pulumi.StringPtrInput
	AzureConfig              NodeTemplateAzureConfigPtrInput
	CloudCredentialId        pulumi.StringPtrInput
	Description              pulumi.StringPtrInput
	DigitaloceanConfig       NodeTemplateDigitaloceanConfigPtrInput
	Driver                   pulumi.StringPtrInput
	DriverId                 pulumi.StringPtrInput
	EngineEnv                pulumi.MapInput
	EngineInsecureRegistries pulumi.StringArrayInput
	EngineInstallUrl         pulumi.StringPtrInput
	EngineLabel              pulumi.MapInput
	EngineOpt                pulumi.MapInput
	EngineRegistryMirrors    pulumi.StringArrayInput
	EngineStorageDriver      pulumi.StringPtrInput
	// Labels of the resource
	Labels               pulumi.MapInput
	LinodeConfig         NodeTemplateLinodeConfigPtrInput
	Name                 pulumi.StringPtrInput
	OpennebulaConfig     NodeTemplateOpennebulaConfigPtrInput
	OpenstackConfig      NodeTemplateOpenstackConfigPtrInput
	UseInternalIpAddress pulumi.BoolPtrInput
	VsphereConfig        NodeTemplateVsphereConfigPtrInput
}

func (NodeTemplateState) ElementType() reflect.Type {
	return reflect.TypeOf((*nodeTemplateState)(nil)).Elem()
}

type nodeTemplateArgs struct {
	Amazonec2Config *NodeTemplateAmazonec2Config `pulumi:"amazonec2Config"`
	// Annotations of the resource
	Annotations              map[string]interface{}          `pulumi:"annotations"`
	AuthCertificateAuthority *string                         `pulumi:"authCertificateAuthority"`
	AuthKey                  *string                         `pulumi:"authKey"`
	AzureConfig              *NodeTemplateAzureConfig        `pulumi:"azureConfig"`
	CloudCredentialId        *string                         `pulumi:"cloudCredentialId"`
	Description              *string                         `pulumi:"description"`
	DigitaloceanConfig       *NodeTemplateDigitaloceanConfig `pulumi:"digitaloceanConfig"`
	DriverId                 *string                         `pulumi:"driverId"`
	EngineEnv                map[string]interface{}          `pulumi:"engineEnv"`
	EngineInsecureRegistries []string                        `pulumi:"engineInsecureRegistries"`
	EngineInstallUrl         *string                         `pulumi:"engineInstallUrl"`
	EngineLabel              map[string]interface{}          `pulumi:"engineLabel"`
	EngineOpt                map[string]interface{}          `pulumi:"engineOpt"`
	EngineRegistryMirrors    []string                        `pulumi:"engineRegistryMirrors"`
	EngineStorageDriver      *string                         `pulumi:"engineStorageDriver"`
	// Labels of the resource
	Labels               map[string]interface{}        `pulumi:"labels"`
	LinodeConfig         *NodeTemplateLinodeConfig     `pulumi:"linodeConfig"`
	Name                 *string                       `pulumi:"name"`
	OpennebulaConfig     *NodeTemplateOpennebulaConfig `pulumi:"opennebulaConfig"`
	OpenstackConfig      *NodeTemplateOpenstackConfig  `pulumi:"openstackConfig"`
	UseInternalIpAddress *bool                         `pulumi:"useInternalIpAddress"`
	VsphereConfig        *NodeTemplateVsphereConfig    `pulumi:"vsphereConfig"`
}

// The set of arguments for constructing a NodeTemplate resource.
type NodeTemplateArgs struct {
	Amazonec2Config NodeTemplateAmazonec2ConfigPtrInput
	// Annotations of the resource
	Annotations              pulumi.MapInput
	AuthCertificateAuthority pulumi.StringPtrInput
	AuthKey                  pulumi.StringPtrInput
	AzureConfig              NodeTemplateAzureConfigPtrInput
	CloudCredentialId        pulumi.StringPtrInput
	Description              pulumi.StringPtrInput
	DigitaloceanConfig       NodeTemplateDigitaloceanConfigPtrInput
	DriverId                 pulumi.StringPtrInput
	EngineEnv                pulumi.MapInput
	EngineInsecureRegistries pulumi.StringArrayInput
	EngineInstallUrl         pulumi.StringPtrInput
	EngineLabel              pulumi.MapInput
	EngineOpt                pulumi.MapInput
	EngineRegistryMirrors    pulumi.StringArrayInput
	EngineStorageDriver      pulumi.StringPtrInput
	// Labels of the resource
	Labels               pulumi.MapInput
	LinodeConfig         NodeTemplateLinodeConfigPtrInput
	Name                 pulumi.StringPtrInput
	OpennebulaConfig     NodeTemplateOpennebulaConfigPtrInput
	OpenstackConfig      NodeTemplateOpenstackConfigPtrInput
	UseInternalIpAddress pulumi.BoolPtrInput
	VsphereConfig        NodeTemplateVsphereConfigPtrInput
}

func (NodeTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*nodeTemplateArgs)(nil)).Elem()
}
