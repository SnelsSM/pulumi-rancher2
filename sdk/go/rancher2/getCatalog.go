// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package rancher2

import (
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Use this data source to retrieve information about a Rancher v2 catalog.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-rancher2/blob/master/website/docs/d/catalog.html.markdown.
func LookupCatalog(ctx *pulumi.Context, args *GetCatalogArgs) (*GetCatalogResult, error) {
	inputs := make(map[string]interface{})
	if args != nil {
		inputs["name"] = args.Name
		inputs["scope"] = args.Scope
	}
	outputs, err := ctx.Invoke("rancher2:index/getCatalog:getCatalog", inputs)
	if err != nil {
		return nil, err
	}
	return &GetCatalogResult{
		Annotations: outputs["annotations"],
		Branch: outputs["branch"],
		ClusterId: outputs["clusterId"],
		Description: outputs["description"],
		Kind: outputs["kind"],
		Labels: outputs["labels"],
		Name: outputs["name"],
		Password: outputs["password"],
		ProjectId: outputs["projectId"],
		Scope: outputs["scope"],
		Url: outputs["url"],
		Username: outputs["username"],
		Id: outputs["id"],
	}, nil
}

// A collection of arguments for invoking getCatalog.
type GetCatalogArgs struct {
	// The catalog name.
	Name interface{}
	// The scope of the catalog. `cluster`, `global`, and `project` are supported. Default `global` (string)
	Scope interface{}
}

// A collection of values returned by getCatalog.
type GetCatalogResult struct {
	// (Computed) Annotations for the catalog (map)
	Annotations interface{}
	// (Computed) The branch of the catalog repo to use (string)
	Branch interface{}
	// (Computed) The cluster id of the catalog (string)
	ClusterId interface{}
	// (Computed) A catalog description (string)
	Description interface{}
	// (Computed) The kind of the catalog. Just helm by the moment (string)
	Kind interface{}
	// (Computed) Labels for the catalog (map)
	Labels interface{}
	Name interface{}
	// (Computed/Sensitive) The password to access the catalog if needed (string)
	Password interface{}
	// (Computed) The project id of the catalog (string)
	ProjectId interface{}
	Scope interface{}
	// (Computed) The url of the catalog repo (string)
	Url interface{}
	// (Computed/Sensitive) The username to access the catalog if needed (string)
	Username interface{}
	// id is the provider-assigned unique ID for this managed resource.
	Id interface{}
}
