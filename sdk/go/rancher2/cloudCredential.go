// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package rancher2

import (
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides a Rancher v2 Cloud Credential resource. This can be used to create Cloud Credential for Rancher v2.2.x and retrieve their information.
// 
// amazonec2, azure, digitalocean, openstack and vsphere credentials config are supported for Cloud Credential.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-rancher2/blob/master/website/docs/r/cloud_credential.html.markdown.
type CloudCredential struct {
	s *pulumi.ResourceState
}

// NewCloudCredential registers a new resource with the given unique name, arguments, and options.
func NewCloudCredential(ctx *pulumi.Context,
	name string, args *CloudCredentialArgs, opts ...pulumi.ResourceOpt) (*CloudCredential, error) {
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["amazonec2CredentialConfig"] = nil
		inputs["annotations"] = nil
		inputs["azureCredentialConfig"] = nil
		inputs["description"] = nil
		inputs["digitaloceanCredentialConfig"] = nil
		inputs["labels"] = nil
		inputs["name"] = nil
		inputs["openstackCredentialConfig"] = nil
		inputs["vsphereCredentialConfig"] = nil
	} else {
		inputs["amazonec2CredentialConfig"] = args.Amazonec2CredentialConfig
		inputs["annotations"] = args.Annotations
		inputs["azureCredentialConfig"] = args.AzureCredentialConfig
		inputs["description"] = args.Description
		inputs["digitaloceanCredentialConfig"] = args.DigitaloceanCredentialConfig
		inputs["labels"] = args.Labels
		inputs["name"] = args.Name
		inputs["openstackCredentialConfig"] = args.OpenstackCredentialConfig
		inputs["vsphereCredentialConfig"] = args.VsphereCredentialConfig
	}
	inputs["driver"] = nil
	s, err := ctx.RegisterResource("rancher2:index/cloudCredential:CloudCredential", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &CloudCredential{s: s}, nil
}

// GetCloudCredential gets an existing CloudCredential resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCloudCredential(ctx *pulumi.Context,
	name string, id pulumi.ID, state *CloudCredentialState, opts ...pulumi.ResourceOpt) (*CloudCredential, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["amazonec2CredentialConfig"] = state.Amazonec2CredentialConfig
		inputs["annotations"] = state.Annotations
		inputs["azureCredentialConfig"] = state.AzureCredentialConfig
		inputs["description"] = state.Description
		inputs["digitaloceanCredentialConfig"] = state.DigitaloceanCredentialConfig
		inputs["driver"] = state.Driver
		inputs["labels"] = state.Labels
		inputs["name"] = state.Name
		inputs["openstackCredentialConfig"] = state.OpenstackCredentialConfig
		inputs["vsphereCredentialConfig"] = state.VsphereCredentialConfig
	}
	s, err := ctx.ReadResource("rancher2:index/cloudCredential:CloudCredential", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &CloudCredential{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *CloudCredential) URN() pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *CloudCredential) ID() pulumi.IDOutput {
	return r.s.ID()
}

// AWS config for the Cloud Credential (list maxitems:1)
func (r *CloudCredential) Amazonec2CredentialConfig() pulumi.Output {
	return r.s.State["amazonec2CredentialConfig"]
}

// Annotations for Cloud Credential object (map)
func (r *CloudCredential) Annotations() pulumi.MapOutput {
	return (pulumi.MapOutput)(r.s.State["annotations"])
}

// Azure config for the Cloud Credential (list maxitems:1)
func (r *CloudCredential) AzureCredentialConfig() pulumi.Output {
	return r.s.State["azureCredentialConfig"]
}

// Description for the Cloud Credential (string)
func (r *CloudCredential) Description() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["description"])
}

// DigitalOcean config for the Cloud Credential (list maxitems:1)
func (r *CloudCredential) DigitaloceanCredentialConfig() pulumi.Output {
	return r.s.State["digitaloceanCredentialConfig"]
}

// (Computed) The driver of the Cloud Credential (string)
func (r *CloudCredential) Driver() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["driver"])
}

// Labels for Cloud Credential object (map)
func (r *CloudCredential) Labels() pulumi.MapOutput {
	return (pulumi.MapOutput)(r.s.State["labels"])
}

// The name of the Cloud Credential (string)
func (r *CloudCredential) Name() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["name"])
}

// OpenStack config for the Cloud Credential (list maxitems:1)
func (r *CloudCredential) OpenstackCredentialConfig() pulumi.Output {
	return r.s.State["openstackCredentialConfig"]
}

// vSphere config for the Cloud Credential (list maxitems:1)
func (r *CloudCredential) VsphereCredentialConfig() pulumi.Output {
	return r.s.State["vsphereCredentialConfig"]
}

// Input properties used for looking up and filtering CloudCredential resources.
type CloudCredentialState struct {
	// AWS config for the Cloud Credential (list maxitems:1)
	Amazonec2CredentialConfig interface{}
	// Annotations for Cloud Credential object (map)
	Annotations interface{}
	// Azure config for the Cloud Credential (list maxitems:1)
	AzureCredentialConfig interface{}
	// Description for the Cloud Credential (string)
	Description interface{}
	// DigitalOcean config for the Cloud Credential (list maxitems:1)
	DigitaloceanCredentialConfig interface{}
	// (Computed) The driver of the Cloud Credential (string)
	Driver interface{}
	// Labels for Cloud Credential object (map)
	Labels interface{}
	// The name of the Cloud Credential (string)
	Name interface{}
	// OpenStack config for the Cloud Credential (list maxitems:1)
	OpenstackCredentialConfig interface{}
	// vSphere config for the Cloud Credential (list maxitems:1)
	VsphereCredentialConfig interface{}
}

// The set of arguments for constructing a CloudCredential resource.
type CloudCredentialArgs struct {
	// AWS config for the Cloud Credential (list maxitems:1)
	Amazonec2CredentialConfig interface{}
	// Annotations for Cloud Credential object (map)
	Annotations interface{}
	// Azure config for the Cloud Credential (list maxitems:1)
	AzureCredentialConfig interface{}
	// Description for the Cloud Credential (string)
	Description interface{}
	// DigitalOcean config for the Cloud Credential (list maxitems:1)
	DigitaloceanCredentialConfig interface{}
	// Labels for Cloud Credential object (map)
	Labels interface{}
	// The name of the Cloud Credential (string)
	Name interface{}
	// OpenStack config for the Cloud Credential (list maxitems:1)
	OpenstackCredentialConfig interface{}
	// vSphere config for the Cloud Credential (list maxitems:1)
	VsphereCredentialConfig interface{}
}
