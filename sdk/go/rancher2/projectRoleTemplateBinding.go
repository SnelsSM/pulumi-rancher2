// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package rancher2

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type ProjectRoleTemplateBinding struct {
	pulumi.CustomResourceState

	// Annotations of the resource
	Annotations      pulumi.MapOutput       `pulumi:"annotations"`
	GroupId          pulumi.StringPtrOutput `pulumi:"groupId"`
	GroupPrincipalId pulumi.StringOutput    `pulumi:"groupPrincipalId"`
	// Labels of the resource
	Labels          pulumi.MapOutput       `pulumi:"labels"`
	Name            pulumi.StringOutput    `pulumi:"name"`
	ProjectId       pulumi.StringOutput    `pulumi:"projectId"`
	RoleTemplateId  pulumi.StringOutput    `pulumi:"roleTemplateId"`
	UserId          pulumi.StringPtrOutput `pulumi:"userId"`
	UserPrincipalId pulumi.StringOutput    `pulumi:"userPrincipalId"`
}

// NewProjectRoleTemplateBinding registers a new resource with the given unique name, arguments, and options.
func NewProjectRoleTemplateBinding(ctx *pulumi.Context,
	name string, args *ProjectRoleTemplateBindingArgs, opts ...pulumi.ResourceOption) (*ProjectRoleTemplateBinding, error) {
	if args == nil || args.ProjectId == nil {
		return nil, errors.New("missing required argument 'ProjectId'")
	}
	if args == nil || args.RoleTemplateId == nil {
		return nil, errors.New("missing required argument 'RoleTemplateId'")
	}
	if args == nil {
		args = &ProjectRoleTemplateBindingArgs{}
	}
	var resource ProjectRoleTemplateBinding
	err := ctx.RegisterResource("rancher2:index/projectRoleTemplateBinding:ProjectRoleTemplateBinding", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetProjectRoleTemplateBinding gets an existing ProjectRoleTemplateBinding resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetProjectRoleTemplateBinding(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ProjectRoleTemplateBindingState, opts ...pulumi.ResourceOption) (*ProjectRoleTemplateBinding, error) {
	var resource ProjectRoleTemplateBinding
	err := ctx.ReadResource("rancher2:index/projectRoleTemplateBinding:ProjectRoleTemplateBinding", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ProjectRoleTemplateBinding resources.
type projectRoleTemplateBindingState struct {
	// Annotations of the resource
	Annotations      map[string]interface{} `pulumi:"annotations"`
	GroupId          *string                `pulumi:"groupId"`
	GroupPrincipalId *string                `pulumi:"groupPrincipalId"`
	// Labels of the resource
	Labels          map[string]interface{} `pulumi:"labels"`
	Name            *string                `pulumi:"name"`
	ProjectId       *string                `pulumi:"projectId"`
	RoleTemplateId  *string                `pulumi:"roleTemplateId"`
	UserId          *string                `pulumi:"userId"`
	UserPrincipalId *string                `pulumi:"userPrincipalId"`
}

type ProjectRoleTemplateBindingState struct {
	// Annotations of the resource
	Annotations      pulumi.MapInput
	GroupId          pulumi.StringPtrInput
	GroupPrincipalId pulumi.StringPtrInput
	// Labels of the resource
	Labels          pulumi.MapInput
	Name            pulumi.StringPtrInput
	ProjectId       pulumi.StringPtrInput
	RoleTemplateId  pulumi.StringPtrInput
	UserId          pulumi.StringPtrInput
	UserPrincipalId pulumi.StringPtrInput
}

func (ProjectRoleTemplateBindingState) ElementType() reflect.Type {
	return reflect.TypeOf((*projectRoleTemplateBindingState)(nil)).Elem()
}

type projectRoleTemplateBindingArgs struct {
	// Annotations of the resource
	Annotations      map[string]interface{} `pulumi:"annotations"`
	GroupId          *string                `pulumi:"groupId"`
	GroupPrincipalId *string                `pulumi:"groupPrincipalId"`
	// Labels of the resource
	Labels          map[string]interface{} `pulumi:"labels"`
	Name            *string                `pulumi:"name"`
	ProjectId       string                 `pulumi:"projectId"`
	RoleTemplateId  string                 `pulumi:"roleTemplateId"`
	UserId          *string                `pulumi:"userId"`
	UserPrincipalId *string                `pulumi:"userPrincipalId"`
}

// The set of arguments for constructing a ProjectRoleTemplateBinding resource.
type ProjectRoleTemplateBindingArgs struct {
	// Annotations of the resource
	Annotations      pulumi.MapInput
	GroupId          pulumi.StringPtrInput
	GroupPrincipalId pulumi.StringPtrInput
	// Labels of the resource
	Labels          pulumi.MapInput
	Name            pulumi.StringPtrInput
	ProjectId       pulumi.StringInput
	RoleTemplateId  pulumi.StringInput
	UserId          pulumi.StringPtrInput
	UserPrincipalId pulumi.StringPtrInput
}

func (ProjectRoleTemplateBindingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*projectRoleTemplateBindingArgs)(nil)).Elem()
}
