// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package rancher2

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type ClusterAlertRule struct {
	pulumi.CustomResourceState

	// Annotations of the resource
	Annotations pulumi.MapOutput `pulumi:"annotations"`
	// Alert rule cluster ID
	ClusterId pulumi.StringOutput `pulumi:"clusterId"`
	// Alert event rule
	EventRule ClusterAlertRuleEventRulePtrOutput `pulumi:"eventRule"`
	// Alert rule group ID
	GroupId pulumi.StringOutput `pulumi:"groupId"`
	// Alert rule interval seconds
	GroupIntervalSeconds pulumi.IntPtrOutput `pulumi:"groupIntervalSeconds"`
	// Alert rule wait seconds
	GroupWaitSeconds pulumi.IntPtrOutput `pulumi:"groupWaitSeconds"`
	// Alert rule inherited
	Inherited pulumi.BoolPtrOutput `pulumi:"inherited"`
	// Labels of the resource
	Labels pulumi.MapOutput `pulumi:"labels"`
	// Alert metric rule
	MetricRule ClusterAlertRuleMetricRulePtrOutput `pulumi:"metricRule"`
	// Alert rule name
	Name pulumi.StringOutput `pulumi:"name"`
	// Alert node rule
	NodeRule ClusterAlertRuleNodeRulePtrOutput `pulumi:"nodeRule"`
	// Alert rule repeat interval seconds
	RepeatIntervalSeconds pulumi.IntPtrOutput `pulumi:"repeatIntervalSeconds"`
	// Alert rule severity
	Severity pulumi.StringPtrOutput `pulumi:"severity"`
	// Alert system service rule
	SystemServiceRule ClusterAlertRuleSystemServiceRulePtrOutput `pulumi:"systemServiceRule"`
}

// NewClusterAlertRule registers a new resource with the given unique name, arguments, and options.
func NewClusterAlertRule(ctx *pulumi.Context,
	name string, args *ClusterAlertRuleArgs, opts ...pulumi.ResourceOption) (*ClusterAlertRule, error) {
	if args == nil || args.ClusterId == nil {
		return nil, errors.New("missing required argument 'ClusterId'")
	}
	if args == nil || args.GroupId == nil {
		return nil, errors.New("missing required argument 'GroupId'")
	}
	if args == nil {
		args = &ClusterAlertRuleArgs{}
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("rancher2:index/clusterAlterRule:ClusterAlterRule"),
		},
	})
	opts = append(opts, aliases)
	var resource ClusterAlertRule
	err := ctx.RegisterResource("rancher2:index/clusterAlertRule:ClusterAlertRule", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetClusterAlertRule gets an existing ClusterAlertRule resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetClusterAlertRule(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ClusterAlertRuleState, opts ...pulumi.ResourceOption) (*ClusterAlertRule, error) {
	var resource ClusterAlertRule
	err := ctx.ReadResource("rancher2:index/clusterAlertRule:ClusterAlertRule", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ClusterAlertRule resources.
type clusterAlertRuleState struct {
	// Annotations of the resource
	Annotations map[string]interface{} `pulumi:"annotations"`
	// Alert rule cluster ID
	ClusterId *string `pulumi:"clusterId"`
	// Alert event rule
	EventRule *ClusterAlertRuleEventRule `pulumi:"eventRule"`
	// Alert rule group ID
	GroupId *string `pulumi:"groupId"`
	// Alert rule interval seconds
	GroupIntervalSeconds *int `pulumi:"groupIntervalSeconds"`
	// Alert rule wait seconds
	GroupWaitSeconds *int `pulumi:"groupWaitSeconds"`
	// Alert rule inherited
	Inherited *bool `pulumi:"inherited"`
	// Labels of the resource
	Labels map[string]interface{} `pulumi:"labels"`
	// Alert metric rule
	MetricRule *ClusterAlertRuleMetricRule `pulumi:"metricRule"`
	// Alert rule name
	Name *string `pulumi:"name"`
	// Alert node rule
	NodeRule *ClusterAlertRuleNodeRule `pulumi:"nodeRule"`
	// Alert rule repeat interval seconds
	RepeatIntervalSeconds *int `pulumi:"repeatIntervalSeconds"`
	// Alert rule severity
	Severity *string `pulumi:"severity"`
	// Alert system service rule
	SystemServiceRule *ClusterAlertRuleSystemServiceRule `pulumi:"systemServiceRule"`
}

type ClusterAlertRuleState struct {
	// Annotations of the resource
	Annotations pulumi.MapInput
	// Alert rule cluster ID
	ClusterId pulumi.StringPtrInput
	// Alert event rule
	EventRule ClusterAlertRuleEventRulePtrInput
	// Alert rule group ID
	GroupId pulumi.StringPtrInput
	// Alert rule interval seconds
	GroupIntervalSeconds pulumi.IntPtrInput
	// Alert rule wait seconds
	GroupWaitSeconds pulumi.IntPtrInput
	// Alert rule inherited
	Inherited pulumi.BoolPtrInput
	// Labels of the resource
	Labels pulumi.MapInput
	// Alert metric rule
	MetricRule ClusterAlertRuleMetricRulePtrInput
	// Alert rule name
	Name pulumi.StringPtrInput
	// Alert node rule
	NodeRule ClusterAlertRuleNodeRulePtrInput
	// Alert rule repeat interval seconds
	RepeatIntervalSeconds pulumi.IntPtrInput
	// Alert rule severity
	Severity pulumi.StringPtrInput
	// Alert system service rule
	SystemServiceRule ClusterAlertRuleSystemServiceRulePtrInput
}

func (ClusterAlertRuleState) ElementType() reflect.Type {
	return reflect.TypeOf((*clusterAlertRuleState)(nil)).Elem()
}

type clusterAlertRuleArgs struct {
	// Annotations of the resource
	Annotations map[string]interface{} `pulumi:"annotations"`
	// Alert rule cluster ID
	ClusterId string `pulumi:"clusterId"`
	// Alert event rule
	EventRule *ClusterAlertRuleEventRule `pulumi:"eventRule"`
	// Alert rule group ID
	GroupId string `pulumi:"groupId"`
	// Alert rule interval seconds
	GroupIntervalSeconds *int `pulumi:"groupIntervalSeconds"`
	// Alert rule wait seconds
	GroupWaitSeconds *int `pulumi:"groupWaitSeconds"`
	// Alert rule inherited
	Inherited *bool `pulumi:"inherited"`
	// Labels of the resource
	Labels map[string]interface{} `pulumi:"labels"`
	// Alert metric rule
	MetricRule *ClusterAlertRuleMetricRule `pulumi:"metricRule"`
	// Alert rule name
	Name *string `pulumi:"name"`
	// Alert node rule
	NodeRule *ClusterAlertRuleNodeRule `pulumi:"nodeRule"`
	// Alert rule repeat interval seconds
	RepeatIntervalSeconds *int `pulumi:"repeatIntervalSeconds"`
	// Alert rule severity
	Severity *string `pulumi:"severity"`
	// Alert system service rule
	SystemServiceRule *ClusterAlertRuleSystemServiceRule `pulumi:"systemServiceRule"`
}

// The set of arguments for constructing a ClusterAlertRule resource.
type ClusterAlertRuleArgs struct {
	// Annotations of the resource
	Annotations pulumi.MapInput
	// Alert rule cluster ID
	ClusterId pulumi.StringInput
	// Alert event rule
	EventRule ClusterAlertRuleEventRulePtrInput
	// Alert rule group ID
	GroupId pulumi.StringInput
	// Alert rule interval seconds
	GroupIntervalSeconds pulumi.IntPtrInput
	// Alert rule wait seconds
	GroupWaitSeconds pulumi.IntPtrInput
	// Alert rule inherited
	Inherited pulumi.BoolPtrInput
	// Labels of the resource
	Labels pulumi.MapInput
	// Alert metric rule
	MetricRule ClusterAlertRuleMetricRulePtrInput
	// Alert rule name
	Name pulumi.StringPtrInput
	// Alert node rule
	NodeRule ClusterAlertRuleNodeRulePtrInput
	// Alert rule repeat interval seconds
	RepeatIntervalSeconds pulumi.IntPtrInput
	// Alert rule severity
	Severity pulumi.StringPtrInput
	// Alert system service rule
	SystemServiceRule ClusterAlertRuleSystemServiceRulePtrInput
}

func (ClusterAlertRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*clusterAlertRuleArgs)(nil)).Elem()
}
