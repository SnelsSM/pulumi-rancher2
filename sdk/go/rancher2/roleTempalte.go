// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package rancher2

import (
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides a Rancher v2 Role Template resource. This can be used to create Role Template for Rancher v2 and retrieve their information. 
// 
// `cluster` and `project` scopes are supported for role templates.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-rancher2/blob/master/website/docs/r/role_template.html.markdown.
type RoleTempalte struct {
	s *pulumi.ResourceState
}

// NewRoleTempalte registers a new resource with the given unique name, arguments, and options.
func NewRoleTempalte(ctx *pulumi.Context,
	name string, args *RoleTempalteArgs, opts ...pulumi.ResourceOpt) (*RoleTempalte, error) {
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["administrative"] = nil
		inputs["annotations"] = nil
		inputs["context"] = nil
		inputs["defaultRole"] = nil
		inputs["description"] = nil
		inputs["external"] = nil
		inputs["hidden"] = nil
		inputs["labels"] = nil
		inputs["locked"] = nil
		inputs["name"] = nil
		inputs["roleTemplateIds"] = nil
		inputs["rules"] = nil
	} else {
		inputs["administrative"] = args.Administrative
		inputs["annotations"] = args.Annotations
		inputs["context"] = args.Context
		inputs["defaultRole"] = args.DefaultRole
		inputs["description"] = args.Description
		inputs["external"] = args.External
		inputs["hidden"] = args.Hidden
		inputs["labels"] = args.Labels
		inputs["locked"] = args.Locked
		inputs["name"] = args.Name
		inputs["roleTemplateIds"] = args.RoleTemplateIds
		inputs["rules"] = args.Rules
	}
	inputs["builtin"] = nil
	s, err := ctx.RegisterResource("rancher2:index/roleTempalte:RoleTempalte", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &RoleTempalte{s: s}, nil
}

// GetRoleTempalte gets an existing RoleTempalte resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRoleTempalte(ctx *pulumi.Context,
	name string, id pulumi.ID, state *RoleTempalteState, opts ...pulumi.ResourceOpt) (*RoleTempalte, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["administrative"] = state.Administrative
		inputs["annotations"] = state.Annotations
		inputs["builtin"] = state.Builtin
		inputs["context"] = state.Context
		inputs["defaultRole"] = state.DefaultRole
		inputs["description"] = state.Description
		inputs["external"] = state.External
		inputs["hidden"] = state.Hidden
		inputs["labels"] = state.Labels
		inputs["locked"] = state.Locked
		inputs["name"] = state.Name
		inputs["roleTemplateIds"] = state.RoleTemplateIds
		inputs["rules"] = state.Rules
	}
	s, err := ctx.ReadResource("rancher2:index/roleTempalte:RoleTempalte", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &RoleTempalte{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *RoleTempalte) URN() pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *RoleTempalte) ID() pulumi.IDOutput {
	return r.s.ID()
}

// Administrative role template. Default `false` (bool)
func (r *RoleTempalte) Administrative() pulumi.BoolOutput {
	return (pulumi.BoolOutput)(r.s.State["administrative"])
}

// Annotations for role template object (map)
func (r *RoleTempalte) Annotations() pulumi.MapOutput {
	return (pulumi.MapOutput)(r.s.State["annotations"])
}

// (Computed) Builtin role template (string)
func (r *RoleTempalte) Builtin() pulumi.BoolOutput {
	return (pulumi.BoolOutput)(r.s.State["builtin"])
}

// Role template context. `cluster` and `project` values are supported. Default: `cluster` (string)
func (r *RoleTempalte) Context() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["context"])
}

// Default role template for new created cluster or project. Default `false` (bool)
func (r *RoleTempalte) DefaultRole() pulumi.BoolOutput {
	return (pulumi.BoolOutput)(r.s.State["defaultRole"])
}

// Role template description (string)
func (r *RoleTempalte) Description() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["description"])
}

// External role template. Default `false` (bool)
func (r *RoleTempalte) External() pulumi.BoolOutput {
	return (pulumi.BoolOutput)(r.s.State["external"])
}

// Hidden role template. Default `false` (bool)
func (r *RoleTempalte) Hidden() pulumi.BoolOutput {
	return (pulumi.BoolOutput)(r.s.State["hidden"])
}

// Labels for role template object (map)
func (r *RoleTempalte) Labels() pulumi.MapOutput {
	return (pulumi.MapOutput)(r.s.State["labels"])
}

// Locked role template. Default `false` (bool)
func (r *RoleTempalte) Locked() pulumi.BoolOutput {
	return (pulumi.BoolOutput)(r.s.State["locked"])
}

// Role template name (string)
func (r *RoleTempalte) Name() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["name"])
}

// Inherit role template IDs (list)
func (r *RoleTempalte) RoleTemplateIds() pulumi.ArrayOutput {
	return (pulumi.ArrayOutput)(r.s.State["roleTemplateIds"])
}

// Role template policy rules (list)
func (r *RoleTempalte) Rules() pulumi.ArrayOutput {
	return (pulumi.ArrayOutput)(r.s.State["rules"])
}

// Input properties used for looking up and filtering RoleTempalte resources.
type RoleTempalteState struct {
	// Administrative role template. Default `false` (bool)
	Administrative interface{}
	// Annotations for role template object (map)
	Annotations interface{}
	// (Computed) Builtin role template (string)
	Builtin interface{}
	// Role template context. `cluster` and `project` values are supported. Default: `cluster` (string)
	Context interface{}
	// Default role template for new created cluster or project. Default `false` (bool)
	DefaultRole interface{}
	// Role template description (string)
	Description interface{}
	// External role template. Default `false` (bool)
	External interface{}
	// Hidden role template. Default `false` (bool)
	Hidden interface{}
	// Labels for role template object (map)
	Labels interface{}
	// Locked role template. Default `false` (bool)
	Locked interface{}
	// Role template name (string)
	Name interface{}
	// Inherit role template IDs (list)
	RoleTemplateIds interface{}
	// Role template policy rules (list)
	Rules interface{}
}

// The set of arguments for constructing a RoleTempalte resource.
type RoleTempalteArgs struct {
	// Administrative role template. Default `false` (bool)
	Administrative interface{}
	// Annotations for role template object (map)
	Annotations interface{}
	// Role template context. `cluster` and `project` values are supported. Default: `cluster` (string)
	Context interface{}
	// Default role template for new created cluster or project. Default `false` (bool)
	DefaultRole interface{}
	// Role template description (string)
	Description interface{}
	// External role template. Default `false` (bool)
	External interface{}
	// Hidden role template. Default `false` (bool)
	Hidden interface{}
	// Labels for role template object (map)
	Labels interface{}
	// Locked role template. Default `false` (bool)
	Locked interface{}
	// Role template name (string)
	Name interface{}
	// Inherit role template IDs (list)
	RoleTemplateIds interface{}
	// Role template policy rules (list)
	Rules interface{}
}
