// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package rancher2

import (
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

func LookupProjectAlertRule(ctx *pulumi.Context, args *LookupProjectAlertRuleArgs, opts ...pulumi.InvokeOption) (*LookupProjectAlertRuleResult, error) {
	var rv LookupProjectAlertRuleResult
	err := ctx.Invoke("rancher2:index/getProjectAlertRule:getProjectAlertRule", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getProjectAlertRule.
type LookupProjectAlertRuleArgs struct {
	Labels    map[string]interface{} `pulumi:"labels"`
	Name      string                 `pulumi:"name"`
	ProjectId string                 `pulumi:"projectId"`
}

// A collection of values returned by getProjectAlertRule.
type LookupProjectAlertRuleResult struct {
	Annotations          map[string]interface{} `pulumi:"annotations"`
	GroupId              string                 `pulumi:"groupId"`
	GroupIntervalSeconds int                    `pulumi:"groupIntervalSeconds"`
	GroupWaitSeconds     int                    `pulumi:"groupWaitSeconds"`
	// The provider-assigned unique ID for this managed resource.
	Id                    string                          `pulumi:"id"`
	Inherited             bool                            `pulumi:"inherited"`
	Labels                map[string]interface{}          `pulumi:"labels"`
	MetricRule            GetProjectAlertRuleMetricRule   `pulumi:"metricRule"`
	Name                  string                          `pulumi:"name"`
	PodRule               GetProjectAlertRulePodRule      `pulumi:"podRule"`
	ProjectId             string                          `pulumi:"projectId"`
	RepeatIntervalSeconds int                             `pulumi:"repeatIntervalSeconds"`
	Severity              string                          `pulumi:"severity"`
	WorkloadRule          GetProjectAlertRuleWorkloadRule `pulumi:"workloadRule"`
}
