// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package rancher2

import (
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Use this data source to retrieve information about a Rancher v2 certificate.
// 
// Depending of the availability, there are 2 types of Rancher v2 certificates:
// - Project certificate: Available to all namespaces in the `projectId`
// - Namespaced certificate: Available to just `namespaceId` in the `projectId`
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-rancher2/blob/master/website/docs/d/certificate.html.markdown.
func LookupCertificate(ctx *pulumi.Context, args *GetCertificateArgs) (*GetCertificateResult, error) {
	inputs := make(map[string]interface{})
	if args != nil {
		inputs["name"] = args.Name
		inputs["namespaceId"] = args.NamespaceId
		inputs["projectId"] = args.ProjectId
	}
	outputs, err := ctx.Invoke("rancher2:index/getCertificate:getCertificate", inputs)
	if err != nil {
		return nil, err
	}
	return &GetCertificateResult{
		Annotations: outputs["annotations"],
		Certs: outputs["certs"],
		Description: outputs["description"],
		Labels: outputs["labels"],
		Name: outputs["name"],
		NamespaceId: outputs["namespaceId"],
		ProjectId: outputs["projectId"],
		Id: outputs["id"],
	}, nil
}

// A collection of arguments for invoking getCertificate.
type GetCertificateArgs struct {
	// The name of the certificate (string)
	Name interface{}
	// The namespace id where to assign the namespaced certificate (string)
	NamespaceId interface{}
	// The project id where to assign the certificate (string)
	ProjectId interface{}
}

// A collection of values returned by getCertificate.
type GetCertificateResult struct {
	// (Computed) Annotations for certificate object (map)
	Annotations interface{}
	// (Computed) Base64 encoded certs (string)
	Certs interface{}
	// (Computed) A certificate description (string)
	Description interface{}
	// (Computed) Labels for certificate object (map)
	Labels interface{}
	Name interface{}
	NamespaceId interface{}
	ProjectId interface{}
	// id is the provider-assigned unique ID for this managed resource.
	Id interface{}
}
